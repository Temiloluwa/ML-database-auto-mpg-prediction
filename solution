{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multivirate Linear Regression\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 122
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 175772,
     "status": "ok",
     "timestamp": 1559378388793,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "5eGdt9tyWARQ",
    "outputId": "00ca4e3a-7ea0-4311-e606-d3f4efa1fb1a"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Temmie\\Anaconda03\\envs\\opencvdev\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n",
      "  from ._conv import register_converters as _register_converters\n"
     ]
    }
   ],
   "source": [
    "#import Libraries\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn import preprocessing as prep\n",
    "import pandas as pd\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "VjVt7CPemd3s"
   },
   "source": [
    "### Data Preprocessing\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "63L_g6ramjgs"
   },
   "source": [
    "#### Preprocessing Steps\n",
    "- Read the data in the file\n",
    "- Delete the last column containing the car names\n",
    "- Fill empty values with the mean of the feature\n",
    "- Rename the column header names "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "3m0ajKfg8GzJ"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>displacement</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>weight</th>\n",
       "      <th>acceleration</th>\n",
       "      <th>model year</th>\n",
       "      <th>origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>307.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>3504.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>350.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>3693.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>318.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3436.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3433.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17.0</td>\n",
       "      <td>8</td>\n",
       "      <td>302.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>3449.0</td>\n",
       "      <td>10.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n",
       "0  18.0          8         307.0       130.0  3504.0          12.0   \n",
       "1  15.0          8         350.0       165.0  3693.0          11.5   \n",
       "2  18.0          8         318.0       150.0  3436.0          11.0   \n",
       "3  16.0          8         304.0       150.0  3433.0          12.0   \n",
       "4  17.0          8         302.0       140.0  3449.0          10.5   \n",
       "\n",
       "   model year  origin  \n",
       "0          70       1  \n",
       "1          70       1  \n",
       "2          70       1  \n",
       "3          70       1  \n",
       "4          70       1  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file_path = \"auto-mpg.data\"\n",
    "data = pd.read_csv(file_path, header = None, delimiter = '\\s+', low_memory = False, na_values = \"?\")\n",
    "data_frame = data.drop(columns = 8)\n",
    "data_frame = data_frame.fillna(data_frame.mean())\n",
    "data_frame = data_frame.rename(index = int, columns = {0: \"mpg\", 1:\"cylinders\", 2: \"displacement\",3: \"horsepower\", 4: \"weight\", 5:\"acceleration\",6:\"model year\",7:\"origin\"})\n",
    "data_frame.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Exploration\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The mpg field is the target variable<br>\n",
    "The Features in the dataset are explored to understand their relationship with the target variable\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "8pL6Z8q9ysYM"
   },
   "source": [
    "**Summary Statistics on dataset**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 297
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 559,
     "status": "ok",
     "timestamp": 1559379562853,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "0xOHbRfv__pU",
    "outputId": "0e714e47-ab90-4d4d-d502-e16e5a6ecfed"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>displacement</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>weight</th>\n",
       "      <th>acceleration</th>\n",
       "      <th>model year</th>\n",
       "      <th>origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>398.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>23.514573</td>\n",
       "      <td>5.454774</td>\n",
       "      <td>193.425879</td>\n",
       "      <td>104.469388</td>\n",
       "      <td>2970.424623</td>\n",
       "      <td>15.568090</td>\n",
       "      <td>76.010050</td>\n",
       "      <td>1.572864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.815984</td>\n",
       "      <td>1.701004</td>\n",
       "      <td>104.269838</td>\n",
       "      <td>38.199187</td>\n",
       "      <td>846.841774</td>\n",
       "      <td>2.757689</td>\n",
       "      <td>3.697627</td>\n",
       "      <td>0.802055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>9.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>1613.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>17.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>104.250000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>2223.750000</td>\n",
       "      <td>13.825000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>23.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>148.500000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>2803.500000</td>\n",
       "      <td>15.500000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>29.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>262.000000</td>\n",
       "      <td>125.000000</td>\n",
       "      <td>3608.000000</td>\n",
       "      <td>17.175000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>46.600000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>455.000000</td>\n",
       "      <td>230.000000</td>\n",
       "      <td>5140.000000</td>\n",
       "      <td>24.800000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              mpg   cylinders  displacement  horsepower       weight  \\\n",
       "count  398.000000  398.000000    398.000000  398.000000   398.000000   \n",
       "mean    23.514573    5.454774    193.425879  104.469388  2970.424623   \n",
       "std      7.815984    1.701004    104.269838   38.199187   846.841774   \n",
       "min      9.000000    3.000000     68.000000   46.000000  1613.000000   \n",
       "25%     17.500000    4.000000    104.250000   76.000000  2223.750000   \n",
       "50%     23.000000    4.000000    148.500000   95.000000  2803.500000   \n",
       "75%     29.000000    8.000000    262.000000  125.000000  3608.000000   \n",
       "max     46.600000    8.000000    455.000000  230.000000  5140.000000   \n",
       "\n",
       "       acceleration  model year      origin  \n",
       "count    398.000000  398.000000  398.000000  \n",
       "mean      15.568090   76.010050    1.572864  \n",
       "std        2.757689    3.697627    0.802055  \n",
       "min        8.000000   70.000000    1.000000  \n",
       "25%       13.825000   73.000000    1.000000  \n",
       "50%       15.500000   76.000000    1.000000  \n",
       "75%       17.175000   79.000000    2.000000  \n",
       "max       24.800000   82.000000    3.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = data_frame.iloc[:,0] #target\n",
    "x = data_frame.iloc[:,1:8] #features\n",
    "data_frame.describe(include = 'all')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "kzoRyF_zy4__"
   },
   "source": [
    "**Skewness and kurtosis of dependent variable y**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 300
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 879,
     "status": "ok",
     "timestamp": 1559379563565,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "5je1KdD0ndhG",
    "outputId": "15d134df-fede-4d8b-99dd-963e060a7bd0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9993e10>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9993860>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 51
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 808,
     "status": "ok",
     "timestamp": 1559379563893,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "Q4r0WmYAoIal",
    "outputId": "9e002319-441e-46f9-81b3-f0d7da8526c6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Skewness  0.45706634399491913\n",
      "Kurtosis  -0.5107812652123154\n"
     ]
    }
   ],
   "source": [
    "print(\"Skewness \", y.skew())\n",
    "print(\"Kurtosis \", y.kurt())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Dqx9wtfrzB6a"
   },
   "source": [
    "The depent variable has a slight positive skewness and a slightly flat peak"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "_iEZzaND-znq"
   },
   "source": [
    "**Relationship between target variable and cylinders**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 883,
     "status": "ok",
     "timestamp": 1559379564682,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "lShgvA-U-zns",
    "outputId": "2cc343bc-3089-48c9-c05e-b79b7210076d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and cylinders\n",
      "     mpg  cylinders\n",
      "0  18.0          8\n",
      "1  15.0          8\n",
      "2  18.0          8\n",
      "3  16.0          8\n",
      "4  17.0          8\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9a4bb38>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9993940>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.concat([data_frame[\"mpg\"], data_frame[\"cylinders\"]], axis = 1)\n",
    "print(\"Plotting relationship between mpg and cylinders\\n\", data.head())\n",
    "data.plot.scatter(x = \"cylinders\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "NPukB9aK-zny"
   },
   "source": [
    "-  an inverse relationship can be observed between the two variables "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "LUKiyWkt-ZGC"
   },
   "source": [
    "**Relationship between target variable and displacement**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 756,
     "status": "ok",
     "timestamp": 1559379565307,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "NHGMLQXy-ZGE",
    "outputId": "dd9223d6-33ea-40df-e015-fb374b4d16e5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and displacement\n",
      "     mpg  displacement\n",
      "0  18.0         307.0\n",
      "1  15.0         350.0\n",
      "2  18.0         318.0\n",
      "3  16.0         304.0\n",
      "4  17.0         302.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9a4ba20>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9da3f60>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.concat([data_frame[\"mpg\"], data_frame[\"displacement\"]], axis = 1)\n",
    "print(\"Plotting relationship between mpg and displacement\\n\", data.head())\n",
    "data.plot.scatter(x = \"displacement\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "724ZOix5-ZGL"
   },
   "source": [
    "-  approximate exponential decaying relationship exists between the two variables "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "9nLHs3Bz0V3Z"
   },
   "source": [
    "**Relationship between target variable and horsepower**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 751,
     "status": "ok",
     "timestamp": 1559379566501,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "zoH6hMJP0V3a",
    "outputId": "2d937fa2-afc5-4daf-d0ee-a358a33ea2e4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and horsepower\n",
      "     mpg  horsepower\n",
      "0  18.0       130.0\n",
      "1  15.0       165.0\n",
      "2  18.0       150.0\n",
      "3  16.0       150.0\n",
      "4  17.0       140.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9dd9128>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9ddb7f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.concat([data_frame[\"mpg\"], data_frame[\"horsepower\"]], axis = 1)\n",
    "print(\"Plotting relationship between mpg and horsepower\\n\", data.head())\n",
    "data.plot.scatter(x = \"horsepower\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "2ddtlawz0V3e"
   },
   "source": [
    "-  A similar relationship as observed with displacement"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "kNWAh1Wl01rn"
   },
   "source": [
    "**Relationship between target variable and weight**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 637,
     "status": "ok",
     "timestamp": 1559379567086,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "5H__FVWB01ro",
    "outputId": "fd1cff2f-6e11-4466-f5c9-834866903ff9"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and weight\n",
      "     mpg  weight\n",
      "0  18.0  3504.0\n",
      "1  15.0  3693.0\n",
      "2  18.0  3436.0\n",
      "3  16.0  3433.0\n",
      "4  17.0  3449.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9e33d30>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9df8fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.concat([data_frame[\"mpg\"], data_frame[\"weight\"]], axis = 1)\n",
    "print(\"Plotting relationship between mpg and weight\\n\", data.head())\n",
    "data.plot.scatter(x = \"weight\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "LKuGZFpS01rt"
   },
   "source": [
    "- an inverse relationship exists between the target variable and weight"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "34HQGKPd1eII"
   },
   "source": [
    "**Relationship between target variable and acceleration**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 557,
     "status": "ok",
     "timestamp": 1559379568693,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "1uCs1Gx21eIK",
    "outputId": "06b7b884-b4fd-4c85-83cd-f709fe5720d5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and acceleration\n",
      "     mpg  acceleration\n",
      "0  18.0          12.0\n",
      "1  15.0          11.5\n",
      "2  18.0          11.0\n",
      "3  16.0          12.0\n",
      "4  17.0          10.5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9e1d518>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9e69668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.concat([data_frame[\"mpg\"], data_frame[\"acceleration\"]], axis = 1)\n",
    "print(\"Plotting relationship between mpg and acceleration\\n\", data.head())\n",
    "data.plot.scatter(x = \"acceleration\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "LUGaV4T91eIO"
   },
   "source": [
    "- a clear relationship cannot be established between this two variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "hq1e5uaz1_rq"
   },
   "source": [
    "**Relationship between target variable and Age of car by 1982**\n",
    "- The fied model year is converted to a numerical variable. \n",
    "- This is done by getting the age of the car by 1982.\n",
    "- This is computed as 82 - model year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 419
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 663,
     "status": "ok",
     "timestamp": 1559379570617,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "04B0hVsf1_rt",
    "outputId": "a4a2f8a3-8c28-466c-dc35-b3e7d21c4fea"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting relationship between mpg and age by 1982\n",
      "     mpg  model year\n",
      "0  18.0          12\n",
      "1  15.0          12\n",
      "2  18.0          12\n",
      "3  16.0          12\n",
      "4  17.0          12\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9f124e0>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9ea8cf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model_year = data_frame[\"model year\"]\n",
    "model_year = 82 - model_year\n",
    "data = pd.concat([data_frame[\"mpg\"], model_year ], axis = 1)\n",
    "print(\"Plotting relationship between mpg and age by 1982\\n\", data.head())\n",
    "data.plot.scatter(x = \"model year\", y = \"mpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "RB4j1fGX1_rz"
   },
   "source": [
    "- an inverse relationship exists between the target variable and the age of the car by 1982\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "c8RaWTrN623T"
   },
   "source": [
    "**Correlation  Matrix of the features**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 613
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 844,
     "status": "ok",
     "timestamp": 1559379576836,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "HfZ9kohD6x9G",
    "outputId": "ce6667a0-8dcf-4637-8ac5-0b89e1fdab82"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2f9f624a8>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2f9ec4518>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cor_mat = data_frame.corr()\n",
    "plt.subplots(figsize = (13,10))\n",
    "sns.heatmap(cor_mat, vmax = 0.8, square = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the heat maps the following can be observed.\n",
    "- cylinders, displacement, horsepower and weight are strongly correlated with one another\n",
    "- Let the following fields : cylinders, displacement, horsepower and weight be referred to as inverse fields\n",
    "- There is an strong inverse correlation between mpg and the fields I refer to as inverse fields\n",
    "- acceleration shows the weakest correlation to mpg"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "TZLEzbuOBrKE"
   },
   "source": [
    " ### Feature Selection and Preprocessing \n",
    " ---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- All the features except acceleration ,which shows the weakest correlation, is selected for this model\n",
    "- Feature cylinder is one hot encoded\n",
    "- Features displacement, horsepower and weight are min-max normalized\n",
    "- Feature Model year is converted to Age of Car by 1982\n",
    "- Feature Origin is one hot encoded"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "xWSz89rpAZMt"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x_data shape  (398, 12)\n",
      "y_data shape  (398, 1)\n",
      "Number of features is  12\n"
     ]
    }
   ],
   "source": [
    "#select target variable\n",
    "y = data_frame.iloc[:,0]\n",
    "y_data = y.values.astype(\"float\").reshape(398,-1)\n",
    "\n",
    "#one hot encoding cylinders feature\n",
    "cylinders = pd.get_dummies(data_frame.iloc[:,1])\n",
    "cylinders = cylinders.values.astype(\"float\")\n",
    "\n",
    "#select the columns displacement, horsepower and weight and perform min-max normalization\n",
    "disp_horsp_weight = data_frame.iloc[:,2:5].values\n",
    "min_max = prep.MinMaxScaler()\n",
    "disp_horsp_weight = min_max.fit_transform(disp_horsp_weight)\n",
    "\n",
    "#converting model year to age of car by 1982\n",
    "age_of_car_by_82 = 82 - data_frame.iloc[:,6]\n",
    "age_of_car_by_82 = age_of_car_by_82.values.astype(\"float\").reshape(398,-1)\n",
    "\n",
    "#one hot encoding of origin\n",
    "origin = pd.get_dummies(data_frame.iloc[:,7])\n",
    "origin = origin.values.astype(\"float\")\n",
    "\n",
    "#concatenating cylinders, numerical features, age of car by 1982 and origin \n",
    "x_data = np.concatenate((cylinders,disp_horsp_weight,age_of_car_by_82,origin), axis = 1)\n",
    "\n",
    "#number of features in the dataset\n",
    "n = x_data.shape[1]\n",
    "\n",
    "print(\"x_data shape \",x_data.shape)\n",
    "print(\"y_data shape \",y_data.shape)\n",
    "print(\"Number of features is \",n)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "odyIChXBB7xl"
   },
   "source": [
    "**Data set is shuffled, train and test sets are selected**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "0epMRAYnCqLi"
   },
   "outputs": [],
   "source": [
    "x_shuffled,y_shuffled = shuffle(x_data,y_data,random_state=0)\n",
    "X_train = x_shuffled[:358].reshape(-1,n)\n",
    "X_test = x_shuffled[358:].reshape(-1,n)\n",
    "y_train = y_shuffled[:358].reshape(-1,1)\n",
    "y_test = y_shuffled[358:].reshape(-1,1)\n",
    "\n",
    "m = 398 #number of training features\n",
    "lr = 0.00001# learning rate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- cost function is 0.5 * Mean Squared Error\n",
    "- Mean Absolute error is also computed\n",
    "- Model is trained using GradientDescentOptimizer\n",
    "- Learning rate of 0.002 is selected\n",
    "- 180 epochs is selected"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "LGIDA27NCtxO"
   },
   "outputs": [],
   "source": [
    "X = tf.placeholder(\"float32\", [None,n])\n",
    "Y = tf.placeholder(\"float32\", [None,1])\n",
    "W = tf.Variable(np.random.rand(n,1).astype(\"float32\"))\n",
    "b = tf.Variable((np.random.rand()))\n",
    "\n",
    "y_hat = tf.matmul(X,W) + b\n",
    "error = Y - y_hat\n",
    "\n",
    "cost = tf.reduce_mean(tf.pow(error,2))/2.0\n",
    "mae_loss = tf.reduce_mean(tf.abs(error))\n",
    "\n",
    "optimizer = tf.train.GradientDescentOptimizer(lr).minimize(cost)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "F8NdCMNLEVNw"
   },
   "outputs": [],
   "source": [
    "init = tf.global_variables_initializer()\n",
    "epochs = 180\n",
    "mse_losses = []\n",
    "mae_losses = []\n",
    "rmse_losses = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1615
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 37251,
     "status": "ok",
     "timestamp": 1559379625389,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "PCQFbhPCEWV0",
    "outputId": "522f07b4-07bd-483f-b3aa-5efba9f7cf65"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Initial Weight  [[0.33905014]\n",
      " [0.82588875]\n",
      " [0.9529132 ]\n",
      " [0.75860846]\n",
      " [0.20069438]\n",
      " [0.5181065 ]\n",
      " [0.3181752 ]\n",
      " [0.7031582 ]\n",
      " [0.5507825 ]\n",
      " [0.31898013]\n",
      " [0.0916599 ]\n",
      " [0.6175803 ]] \n",
      " Initial bias : 0.34582812 \n",
      "\n",
      "For epoch  1 mse loss is  377.46704\n",
      "For epoch  1 mae loss is  16.644308\n",
      "For epoch  1 rmse loss is  19.42851 \n",
      "\n",
      "For epoch  21 mse loss is  248.14494\n",
      "For epoch  21 mae loss is  12.380547\n",
      "For epoch  21 rmse loss is  15.752617 \n",
      "\n",
      "For epoch  41 mse loss is  228.73071\n",
      "For epoch  41 mae loss is  11.89013\n",
      "For epoch  41 rmse loss is  15.123846 \n",
      "\n",
      "For epoch  61 mse loss is  211.01927\n",
      "For epoch  61 mae loss is  11.4026165\n",
      "For epoch  61 rmse loss is  14.526503 \n",
      "\n",
      "For epoch  81 mse loss is  194.81175\n",
      "For epoch  81 mae loss is  10.934438\n",
      "For epoch  81 rmse loss is  13.957498 \n",
      "\n",
      "For epoch  101 mse loss is  179.9792\n",
      "For epoch  101 mae loss is  10.485959\n",
      "For epoch  101 rmse loss is  13.415633 \n",
      "\n",
      "For epoch  121 mse loss is  166.40347\n",
      "For epoch  121 mae loss is  10.061172\n",
      "For epoch  121 rmse loss is  12.899747 \n",
      "\n",
      "For epoch  141 mse loss is  153.97818\n",
      "For epoch  141 mae loss is  9.654467\n",
      "For epoch  141 rmse loss is  12.408794 \n",
      "\n",
      "For epoch  161 mse loss is  142.6053\n",
      "For epoch  161 mae loss is  9.266918\n",
      "For epoch  161 rmse loss is  11.941746 \n",
      "\n",
      " Weight  [[ 0.35529727]\n",
      " [ 5.2765417 ]\n",
      " [ 1.0452636 ]\n",
      " [ 1.2298527 ]\n",
      " [-0.5080969 ]\n",
      " [ 0.5644293 ]\n",
      " [ 0.619423  ]\n",
      " [ 1.1587123 ]\n",
      " [ 1.3683883 ]\n",
      " [ 1.6007365 ]\n",
      " [ 1.1964394 ]\n",
      " [ 2.5527523 ]] \n",
      "Final bias : 4.6675014 \n",
      "\n",
      "Final training rmse loss  11.519247 \n",
      "\n",
      "Final test rmse loss  10.627703\n",
      "\n",
      "*************************************\n",
      "     Ground truth  Predictions on Test set\n",
      "0           18.2                11.257879\n",
      "1           30.7                 9.183707\n",
      "2           24.0                22.379923\n",
      "3           17.0                11.225372\n",
      "4           27.0                12.087739\n",
      "5           23.0                21.307840\n",
      "6           18.0                20.672159\n",
      "7           27.2                13.426928\n",
      "8           35.0                14.388810\n",
      "9           29.0                19.570137\n",
      "10          21.5                15.014124\n",
      "11          15.0                19.631332\n",
      "12          17.5                12.725231\n",
      "13          15.0                20.887043\n",
      "14          32.7                12.048342\n",
      "15          10.0                24.161839\n",
      "16          20.0                16.365524\n",
      "17          32.4                15.600392\n",
      "18          34.0                12.843557\n",
      "19          18.0                17.849129\n",
      "20          32.0                12.716677\n",
      "21          14.0                22.667522\n",
      "22          24.0                16.478373\n",
      "23          26.4                14.940914\n",
      "24          14.0                19.521254\n",
      "25          13.0                21.335833\n",
      "26          13.0                19.600452\n",
      "27          18.5                11.405769\n",
      "28          21.5                18.599430\n",
      "29          16.2                13.589143\n",
      "30          16.5                16.424145\n",
      "31          15.0                23.870110\n",
      "32          28.1                13.261025\n",
      "33          29.0                19.938740\n",
      "34          20.2                12.530981\n",
      "35          27.9                14.998482\n",
      "36          22.0                16.744118\n",
      "37          29.0                23.549522\n",
      "38          19.0                23.545902\n",
      "39          25.0                21.035849\n"
     ]
    }
   ],
   "source": [
    "with tf.Session() as s:\n",
    "  s.run(init)\n",
    "  print(\"Initial Weight \", s.run(W), \"\\n\",\"Initial bias :\", s.run(b), \"\\n\")\n",
    "  for epoch in range(epochs):\n",
    "    X_train,y_train = shuffle(X_train,y_train,random_state=0)\n",
    "    for (x,y) in zip(X_train, y_train):\n",
    "      x = x.reshape(1,n)\n",
    "      y = y.reshape(1,1)\n",
    "      s.run(optimizer, feed_dict = {X:x, Y:y})\n",
    "    \n",
    "    epoch_mse_loss, epoch_mae_loss =  s.run([cost*2.0, mae_loss], feed_dict = {X:X_train, Y:y_train})\n",
    "    epoch_rmse_loss = np.sqrt(epoch_mse_loss)\n",
    "    \n",
    "    if epoch % 20 == 0:\n",
    "      print(\"For epoch \", epoch+1, \"mse loss is \", epoch_mse_loss)\n",
    "      print(\"For epoch \", epoch+1, \"mae loss is \", epoch_mae_loss)\n",
    "      print(\"For epoch \", epoch+1, \"rmse loss is \", epoch_rmse_loss,\"\\n\")\n",
    "    \n",
    "    mse_losses.append(epoch_mse_loss)\n",
    "    mae_losses.append(epoch_mae_loss)\n",
    "    rmse_losses.append(epoch_rmse_loss)\n",
    "    \n",
    "  print(\" Weight \", s.run(W), \"\\nFinal bias :\", s.run(b),\"\\n\")\n",
    "  print(\"Final training rmse loss \", epoch_rmse_loss, \"\\n\")\n",
    "  print(\"Final test rmse loss \", s.run(tf.sqrt(2.0*cost), feed_dict = {X:X_test, Y:y_test}))\n",
    "  \n",
    "  pred_test = s.run(y_hat, feed_dict = {X:X_test, Y:y_test})\n",
    "  _ = np.concatenate((y_test,pred_test), axis = 1)\n",
    "  test_set = pd.DataFrame(_, columns = [\"Ground truth\",\"Predictions on Test set\"])\n",
    "  print(\"\\n*************************************\\n\",test_set)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 286
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 239120,
     "status": "ok",
     "timestamp": 1559378454842,
     "user": {
      "displayName": "Roy Jacuzzi",
      "photoUrl": "",
      "userId": "04564756668878318833"
     },
     "user_tz": -120
    },
    "id": "xBbhHaJEcJsK",
    "outputId": "8b908f1d-cf37-4af9-b27b-45c247cb9d99"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Loss')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABJoAAAGKCAYAAABEhyu6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3Xl8VPX1//H3yUwyWUlYAqKAuKKoiBos7orWqq37Su23aqlaWxe0tbXtr/3a2uVb64K2rlVEW8Wt7tW6K6K4RAVEBUFBQRCC7EsSkpzfH/cGxzAJCSS5M5nX8/HIIzP3fmbm4OPhfHLPPZ/zMXcXAAAAAAAAsLlyog4AAAAAAAAAXQOJJgAAAAAAALQLEk0AAAAAAABoFySaAAAAAAAA0C5INAEAAAAAAKBdkGgCAAAAAABAuyDRhC7JzC43Mzezmc2cnxWev7zJ8TPN7G0zW2lmS83sXTO7pskYb+Zn1kZiesnMHtzsfxwAYLNt6jwRnjMzmx2e3z7F+YNbmCtu20hcbmbnb/I/DADQZklzQuPPF2b2hJkNaTJuYNKY/VK8z2/Cc3OaHN/VzB4xswVmtjacQ+41s12TxoxrYe7Yv4XYzwzHFLfDfwqgXcSjDgDoQNWStjGzCnevbDxoZsMkbR2eV9LxX0q6QtKVki6TlC9pL0nfk3RJk/e+WlLTpFG1AACZpE3zRJJ9JA0MH58m6Q/NjDtd0idNji3a5GgBAB1puaQjwscDJf1e0rNmtrO7L2kydpWkkZJebXL81PDceuENidclvSnpfElLJe0g6WRJQyRNSxo+XdJZKWJ7v43/FiBSJJrQla2W9I6Ci4DKpOOnSXpBQRIp2fmSbnH3XyUde9zMfpfivee4++vtGSwAoNO1dZ5oNDJ87bTwcXOJpqnuPq2ZcwCA9FKX9Pf962FV0iQFyad7mox9XNJJZnaRu9dLkpntJmlnSfcruCHR6CxJNZKOdPea8NgLkm4xM2vyvqu5xkBXwNI5dHX3Sjql8Us8/H1KeLypMklfND3o7t6hESYxsxFm9oaZVZvZQjO7MbkM1sxyzewqM/vMzGrMbL6ZPWxmeeH5MjO7LTxeHY77R2fFDwAZqC3zhMwspuAu9GOSxkoa3HRpRUczs/PNbGY4D8wys4ubnO9nZveb2aJwicbHZnZF0vldzOy/ZrbEzFab2Ydm9pPO/DcAQAaYEv7un+Lco5JKJB2SdOw0SRMlfd5kbJmkZUlJpvU66zrDzHqZ2Z1m9qWZrQlbelQ0GXOMBS1EVlvQQuQNMzso6fwoM3s/nFcWm9nLZrZLZ8SPzEOiCV3dQ5L6SGpc13yApHJJD6cY+46kC8zsDDPruZH3zTGzeJOfzfr/ycwGS/qvpMWSTpT0v5K+q68v0fulgqUYv5H0TUmjFZT5xsLz1yj4t14s6VuSfiWp0xJlAJCB2jJPSNKIcPy9Cr6f1ymoakollmKuaHr3uk3M7GxJf1OQ6Dpa0gOSrjazy5KG3aXgwugcSUdK+qOkRNL5xyTVK1gafkz4fiWbExcAdEEDwt+zU5xbLekJff37/zRJ41OMfUfStmZ2Xfj3fotSzBvtsQrpEQXXBj9TsLwvR9KL4bI+mdl2Cua0FxTMLacr+Pf1CM8fKOlmSf9SMK/8QNJrkkrbITZ0QSydQ5fm7svM7L8KvvhfCX//NzzedPhPFHwJj5PkZvahpH9LusrdVzQZe134k+xOSWduRri/lfSppGOSSnCXSLrPzPZx90mS9pZ0j7vfmfS6+5Me7y3pBne/L+nYvzYjJgDo0to4T0jBRcWycEytmT0r6TQz+1WKO9OTU7z+LAXzTJuFNzQulzTO3X8aHn7GzEol/dLMxrh7tYK5YKS7Px6OeSnpPXpJ2lbSce7+Xnj4+U2JBwC6mqSkztaS/q7ge/zRZobfK+l2MztP0lAFiakHFfR6TXanpMMlXSjpwvDv+yclXZfcHzC0l4IbGBuE1sZ/ylcvNDtC0n6SDnb3l8NjL0iaI+lSSedK2kPSSne/NOmlTyY93lvBcvA/Jx17bFNjQtdHRROywb0K1lAnJJ2kZpZDuPtUBeuqj5F0o4Iv9N9IqrQNd3H4q6RhTX4u38w495b0cGOSKfRvSXX66k77ZElnmtnPzWxIijvjkyVdamY/NrMdNzMeAMgWrZonwvPHK/iurg0Pj1fQNHZ4ipecpg3nisdTjGutfpK2VFDFlOw+Sd0k7RY+nyzpzxbsRDSgydglkuZKutnMTjWz3psRDwB0JT0VJHnWSZqlIPlyQqolb6EnFawq+JaC7/vn3X1x00HuXufup0raXcG1xdsKlmhPMrNvNxn+oTacN4Zt5r9rb0lVjUmmMKbGiqzGa4z3JJWGy+sON7OiJu8xWdIeZnatmR3Y2LYDaA6JJmSDxyQVK1g6UKQW/sh39xp3f9zdz3f3wZJ+qGBXiFFNhn7m7pVNfuZsZpx9JS1sEk+9pC8Vlq0qaDh7g6QfK1g3PtfMLkp6yfkKqrJ+K2lG2MPjtM2MCwC6utbOE0cq6LXxZNgTr0xBtVCNUi+fez/FXPHlZsTZN/y9sMnxxueNc8WpCpqbXyvpUzObbGaHSpK7Nyi4s/6Fgh5TX5jZK2a2x2bEBQBdwXIFSZ3hCqp88iTd01x7jDAB9YiCVhfN9vZLGj/V3f/g7odLGiRpgTbcTGJNinmjadVTW21wjRFaqHDecPcZko5VUPH6pKTFZnaPmZWH559TUJF7oIJ5b7EFvWSbJqQASSSakAWSMvYXS3o8fN7a196u4O7vTh0UXrIFkr52ZzlsOtszjEHuXu3uv3X3gZJ2VHAXe0xYEit3X+buF7r7Fgrumrwh6e7WrAcHgGzVhnmiMZn0gILtqZcqqA5KKGgoHmvmde1lQfi7aRVSn/B341zxubufqWD+2EdBUumxxv6D7j7d3U9UkDQ7TFK+pP9sbq9BAMhwdWFi5w13v1VBW43hCjaAaM69CpJMvdR8b78NhDeoH1BE1xihPgrnjTCm/7j7AQrmjlEK5oe/JZ2/0933Cl93qYKWIb/puLCRyfiDAtniJgV3qG9ubkCq5QNhFr9Uqe8CtLc3JB3f5ELlBAW91CY2HezuMxU09KuRtEEiKVwKeKmC/887YxIDgEzW4jwRLqH+joKlcoc0+blEwR/eh6R6bTuaJ2m+NrzoOUXSCgVLH9Zz94Zwm+zfSSpU0HMk+fw6d39BwUYSfRUkngAAgX9Jel/SL1oY86yCVhdXuvvyVANaWKK8gzrvGqN32NC7MaZCSd9W6muM5e5+j4LEWaprjCp3v0VBX0NuZiMlmoEjK7j7S0pqhtqM98zsUUnPSFqk4A/yn0lao6CJX7KBZta0H4e7+xsb+YytzOykFPE9qKB09l1Jj5jZTQp6cfxF0tNhI3CZ2cMK1nW/K2mtgl4icUkTwvMTFUwK0xTsNne2gl0x3txIXACQ1VoxTxyrIFlzXdPvejN7VdKvFVQ8PZd0akiKHn/L3f3DjYQzNMVcUeXuL5vZ5ZJuMbMvFVzgHCTpPEm/cvfqsDH40wp2nvtIQbXVTxVUNX1oZkMkXaWgIvYTSd0VXERNcfclAgBICv6wN7M/KVgdcKi7b7BxgrvXKUj2t+Q3Zra7pHsU9GAqUnAz+WgF1xrJilJcY0jSrFT9n5o4zsyqmxx7y92fDuep+8IdSr8MP7dAQd9Zmdm5Cipg/6vghsYOCm5q3BWe/52CZXYvKdghew8F80/TxueAJBJNQLLfK7iQuF7BF+kXCrbtPNXdm25r+tPwJ1m9Nv7/1HBt2MRVkszd3zezIyX9ScF22ysU3Dn/edK41xT03misVPpA0olJa7cnKShjHRjG866kI9193kbiAgC0bKSkmaluKLj7OjO7X9JIM/tx0qm7U7zP8wqWI7RklDbsDfiygh2D/hE2JR8t6SIFVU4/dfdrw3HVCiqbLpLUX8HNktclHe7ua83sCwV30H+toLH4MkkvquU79gCQre5TsOHPz7XpO3TeraAP4E8lbaXge/kjBbuDNu3rtJOCv+eb+h9tfCfpf6Y41rjT6fGSrpY0RsFy6TcljXD3WeG4qQo2RLpGwXXQAkn/UND3VZLeUrC8/DRJJQp2yr5cG+7CDUgKLm6jjgEAAAAAAABdAD2aAAAAAAAA0C5INAEAAAAAAKBdkGgCAKQ9MxtrZovMbFrSsfvMbHL4M8fMJkcZIwAAAAB6NAEAMkC4Je8qSXe5+64pzl+tYDev33d6cAAAAADWY9c5AEDac/cJZjYw1TkzMwVbC4/ozJgAAAAAbKjLJZp69erlAwcOjDoMAEg7b7/99mJ3L486jg5wgKSF7j6zNYOZJwAgtS48T7QJ8wQApNbaeaLLJZoGDhyoysrKqMMAgLRjZp9GHUMHGSlpfEsDzOwcSedI0oABA5gnACCFLjxPtAnXEwCQWmvnCZqBAwAylpnFJZ0g6b6Wxrn7re5e4e4V5eVZf7MeAAAA6DAkmgAAmewwSdPdfV7UgQAAAAAg0QQAyABmNl7SJEmDzGyemY0KT52mjSybAwAAANB5ulyPJgBA1+PuI5s5fmYnhwIAAACgBVQ0AQAAAAAAoF2QaAIAAAAAAEC7INEEAAAAAACAdkGiCQAAAAAAAO2CRBMAAAAAAADaBYkmAAAAAAAAtAsSTQAAAAAAAGgXJJpC079Yodc+Xhx1GACANDV57jK989nSqMMAAKSpNz75Uu/PXx51GAAQORJNoVtf/kQ/f3Bq1GEAANLU/z31of7y1PSowwAApKmfPThFt70yO+owACByJJpC+XkxVa+rjzoMAECayovHVFPXEHUYAIA0VZQX1+qauqjDAIDIkWgKFeTGtLaWRBMAILVEPIdEEwCgWYV5Ma2uJdEEACSaQoV5Ma1dVy93jzoUAEAaChJN3JAAAKRWlIhrdQ3zBACQaArl58bU4FJtPXerAQAbSsRjqlnHHAEASI2lcwAQINEUKsiNSRLL5wAAKSVyWToHAGheUSKuNVxLAACJpkYFeWGiiYbgAIAUWDoHAGhJUSKmVVQ0AQCJpkZUNAEAWpJg1zkAQAuCiiYSTQBAoimUn0tFEwCgeYl4jmrrGtg0AgCQUlFeTOvqXbXclACQ5Ug0hQrDpXPVJJoAACkkcoMpk6omAEAqRYm4JNEQHEDWI9EUWt+jqZYLCADAhhLxYJ4g0QQASKUoL0w0sXwOQJYj0RQqYOkcAKAFiXhjRRPzBABgQ4WJ4HpidQ3zBIDsRqIp1NijiQZ+AIBU1iea1lHRBADY0Pqlc1xPAMhyJJpCBfRoAgC0IJHL0jkASFdmNtbMFpnZtKRju5vZJDN7z8weN7NuHRnD+qVz9GgCkOVINIXWL52rJdEEANgQS+cAIK2Nk3REk2O3SbrM3XeT9LCkSzsygCKWzgGAJBJN6zXuOreWJREAgBS+SjQxTwBAunH3CZKWNDk8SNKE8PGzkk7syBioaAKAAImmUOMFBM3AAQCpNO46V0uiCQAyxTRJx4SPT5bUvyM/rLFHEz1fAWQ7Ek0hM1NBboweTQCAlBK5VDQBQIb5gaSfmNnbkkok1TY30MzOMbNKM6usqqrapA9bv3SOVhwAshyJpiQFeTF6NAEAUvpq1znmCQDIBO4+3d0Pd/e9JI2X9HELY2919wp3rygvL9+kzyvIjcmMpXMAQKIpSUFuTGtINAEAUmhcOkdFEwBkBjPrHf7OkfT/JN3cwZ+norw4zcABZD0STUnyc3NYOgcASIlm4ACQvsxsvKRJkgaZ2TwzGyVppJl9JGm6pPmS7ujoOArzYlQ0Ach68agDSCcFeTGagQMAUvoq0cQ8AQDpxt1HNnPqus6MozgR12qagQPIclQ0JSnMjdOjCQDSkJmNNbNFZjatyfELzGyGmb1vZld2ZAzrl86to6IJAJBaYYKKJgAg0ZQkn4omAEhX4yQdkXzAzA6RdKykIe6+i6SrOjIAdp0DAGxMUV6cXecAZD0STUkK6NEEAGnJ3SdIWtLk8HmS/s/da8IxizoyhrwYS+cAAC0rSsSpaAKQ9Ug0JSnIpaIJADLIjpIOMLM3zOxlMxvW3EAzO8fMKs2ssqqqapM+LCfHlBfLoaIJANCsokScXawBZD0STUkK8mL0aAKAzBGX1F3ScEmXSrrfzCzVQHe/1d0r3L2ivLx8kz8wEc+hRxMAoFlF7DoHACSakuXnkmgCgAwyT9JDHnhTUoOkXh35gYncHJbOAQCaVZjH0jkAINGUpJBm4ACQSR6RNEKSzGxHSXmSFnfkBybiMZbOAQCaVZyIac26ejU0eNShAEBkSDQlKciNqa7Bta6eiwgASCdmNl7SJEmDzGyemY2SNFbStmY2TdK9ks5w9w79yz4Rp0cTAKB5hYm43MXNawBZLd6ZH2Zm+ZImSEqEn/2gu/+vmY2TdJCk5eHQM919cthr4zpJR0laEx5/p6Piy8+NSQomhtwYOTgASBfuPrKZU9/rzDjy4jmq4eIBANCMokRwebW6tm79YwDINp397VcjaYS7rzKzXEkTzeyp8Nyl7v5gk/FHStoh/PmGpJvC3x2iIC9INFXX1qtbfm5HfQwAIEMlclk6BwBoXlF4PbG6pl4qiTgYAIhIp5bthA1bV4VPc8OflpY5HCvprvB1r0sqM7O+HRVfQVJFEwAATQVL55gjAACpra9ooiE4gCzW6evDzCxmZpMlLZL0rLu/EZ76o5lNNbNrzSwRHttK0tykl88Lj3UIEk0AgJbQowkA0JKiPBJNANDpiSZ3r3f3oZL6SdrbzHaV9EtJO0kaJqmHpF+Ewy3VWzQ9YGbnmFmlmVVWVVVtcmyNS+fW1JJoAgBsKBGPqWYdiSYAQGqFiXDpXC2JJgDZK7KO1+6+TNJLko5w9wXh8rgaSXdI2jscNk9S/6SX9ZM0P8V73eruFe5eUV5evskxNVY0VZNoAgCkkMhl6RwAoHmNfV5XVpNoApC9OjXRZGblZlYWPi6QdJik6Y19l8Jd5o6TNC18yWOSvm+B4ZKWu/uCjoqvsaKJpXMAgFRYOgcAaElpQZBoWr52XcSRAEB0OnvXub6S7jSzmIIk1/3u/oSZvWBm5QqWyk2W9KNw/JOSjpI0S9IaSWd1ZHD0aAIAtCQRZ9c5AEDz1iea1pBoApC9OjXR5O5TJe2R4viIZsa7pJ90dFyN8hsTTSydAwCkkIjnqIabEQCAZuTFc1SQG6OiCUBWi6xHUzpqXDpXzUUEACCFoEcTFU0AgOaVFuSSaAKQ1Ug0JSmkRxMAoAWNS+eCglsAADZEoglAtiPRlCQ/HiSa1rB0DgCQQiIeTJu19VQ1AQBSI9EEINuRaEqSk2NKxHPo0QQASKkx0cTyOQBAc0oLSTQByG4kmpooyY9rZU1d1GEAANLQ+kTTOhJNAIDUqGgCkO1INDVRnIhrVTWJJgDAhhLhEuuaOipfAQCpkWgCkO1INDVRkp+rldVMDACADSVyWToHAGhZaUGu1tTWax39/ABkKRJNTZTkx7WKpXMAgBRYOgcA2JjSglxJoqoJQNYi0dREcSKulSydAwCkwNI5AMDGkGgCkO1INDURLJ0j0QQA2BC7zgEANoZEE4BsR6KpiZL8OD2aAAAp0aMJALAx3Ug0AchyJJqaaOzR5O5RhwIASDONS+dqSTQBAJrRWNG0gkQTgCxFoqmJ4kRcDS6tqaX/BgDg675aOsccAQDpxMzGmtkiM5uWdGyomb1uZpPNrNLM9u6MWFg6ByDbkWhqoiQ/mBjYeQ4A0NT6ZuDsOgcA6WacpCOaHLtS0u/cfaik34bPO9z6RNMaEk0AshOJpiaK8+OSRJ8mAMAG6NEEAOnJ3SdIWtL0sKRu4eNSSfM7I5a8eI4K82JUNAHIWvGoA0g3JesTTVQ0AQC+Lj83qGhaU8scAQAZYLSkp83sKgU32PdtbqCZnSPpHEkaMGDAZn9waUEuiSYAWYuKpiZKEiSaAACpFeUFiabVNfRoAoAMcJ6ki929v6SLJd3e3EB3v9XdK9y9ory8fLM/mEQTgGxGoqmJxh5NJJoAAE3FYzlKxHO0moomAMgEZ0h6KHz8gKROaQYuSd1INAHIYiSammjs0bSqhokBALCh4kScDSMAIDPMl3RQ+HiEpJmd9cFUNAHIZvRoaoIeTQCAlhQl4lpNogkA0oqZjZd0sKReZjZP0v9KOlvSdWYWl1StsAdTZygtyNX7JJoAZCkSTU0U5ZFoAgA0j0QTAKQfdx/ZzKm9OjWQUGlBrpaRaAKQpVg610Qsx1SciJNoAoA0YmZjzWyRmU1LOna5mX1uZpPDn6M6I5biRIylcwCAFvUsztOa2npVr2PzCADZh0RTCkH/De5AAEAaGSfpiBTHr3X3oeHPk50RSFEirjW1XDgAAJrXqzghSapaWRNxJADQ+Ug0pVCST0UTAKQTd58gaUnUcUhBoomKJgBAS8pLwkTTKhJNALIPiaYUivO5iACADHG+mU0Nl9Z174wPLMqL0aMJANCiciqaAGQxEk0plOTnagUVTQCQ7m6StJ2koZIWSLq6uYFmdo6ZVZpZZVVV1WZ9aNAMnKVzAIDmNVY0LaaiCUAWItGUQkkirlXV9GgCgHTm7gvdvd7dGyT9Q9LeLYy91d0r3L2ivLx8sz63OBHX6to6uftmvQ8AoOvqUZQniYomANmJRFMK9GgCgPRnZn2Tnh4vaVpzY9tTUSIud9EQHADQrNxYjnoU5VHRBCArxaMOIB0V0+gVANKKmY2XdLCkXmY2T9L/SjrYzIZKcklzJJ3bGbEUJYKpc3VN3frHAAA01as4j4omAFmJv5BTKMnP1ZraetXVNygeo+gLAKLm7iNTHL690wORVJyISZJW1dSpdxQBAAAyQnlJgkQTgKxEFiWF4vzGu9UsiwAAfF1RHnMEAGDjyosTWryqNuowAKDTkWhKoSRMNK2gITgAoInicLkcS6wBAC3pVRxUNLF5BIBsQ6IphZLwIoKG4ACAphr7Mq2pZY4AADSvvCShtevqtZrNIwBkGRJNKZQW5kqSlq2l1BUA8HVFST2aAABoTq/ihCRpMX2aAGQZEk0p9CwKJoUlq0k0AQC+7qtd57hDDQBoXnlJcE1RtYpEE4DsQqIphR5FeZKkpSSaAABNfJVooqIJANA8KpoAZCsSTSmUhUvnviTRBABoonHXOZbOAQBaQkUTgGxFoimF3FiOSgtyWToHANhALMdUkBujogkA0KIeRXnKMamKiiYAWYZEUzN6FuWRaAIApFSUiGs1u84BAFoQyzH1KEqQaAKQdUg0NaM7iSYAQDOKEzGtohk4AGAj+pbma/7y6qjDAIBORaKpGT1INAEAmlGUiLN0DgCwUf26F2je0jVRhwEAnYpEUzN6FuXRDBwAkFJRIk4zcADARvXvUajPl66Vu0cdCgB0GhJNzehelKelq2uZFAAAGyjKi2kNPZoAABvRr3uBauoa2HkOQFYh0dSMnkV5qmtwrajmQgIA8HXB0jl6NAEAWtave4Ekae6StRFHAgCdh0RTM3oU5UkSfZoAABsoZukcAKAV+ncvlCT6NAHIKiSamkGiCQDQHJqBAwBaY6uwomneUiqaAGQPEk3NINEEAGhOUSKuNbX1amigjx8AoHmFeXH1Ks6joglAViHR1IyvEk007gMAfF1xIiZJWk1DcADARmzVvZCKJgBZhURTM3oWJSRJS1avizgSAEC6KcnPlSStZMMIAMBG9OteQKIJQFYh0dSMgryY8nNzqGgCAGygrCBINC1dw/JqAEgHZjbWzBaZ2bSkY/eZ2eTwZ46ZTY4itv7dC/X50rUstwaQNUg0taBnUUJf0qMJANBEWWGwvHrZGqpeASBNjJN0RPIBdz/V3Ye6+1BJ/5b0UBSB9eteoNr6Bi1ayQ1sANmBRFMLehTlaSmJJgBAE92LqGgCgHTi7hMkLUl1zsxM0imSxndqUKF+4c5zc2kIDiBLdGqiyczyzexNM5tiZu+b2e/C49uY2RtmNjMscc0LjyfC57PC8wM7M97uRXnsOgcA2ED3sKJpKRVNAJAJDpC00N1nRvHh2/QqkiTNrlodxccDQKfr7IqmGkkj3H13SUMlHWFmwyX9RdK17r6DpKWSRoXjR0la6u7bS7o2HNdpehXlafEqEk0AgK8rKwwqmpZT0QQAmWCkNlLNZGbnmFmlmVVWVVW164f3716o/NwczVi4sl3fFwDSVacmmjywKnyaG/64pBGSHgyP3ynpuPDxseFzhecPDUtfO0Wf0nwtWlmtehr3AQCSJOIxFebFqGgCgDRnZnFJJ0i6r6Vx7n6ru1e4e0V5eXm7xpCTY9qxT4lmfEGiCUB26PQeTWYWC3d8WCTpWUkfS1rm7o17RM+TtFX4eCtJcyUpPL9cUs8U79khdyC2LM3XunrX4lU07gMAfF33wjx6NAFA+jtM0nR3nxdlEIP6lFDRBCBrdHqiyd3rw50f+knaW9LOqYaFv1NVL21QXtRRdyD6lgaN++YvW9tu7wkA6BrKCnPZdQ4A0oSZjZc0SdIgM5tnZo2tOE5TRE3Akw3aokRVK2vo/wogK8Sj+mB3X2ZmL0kaLqnMzOJh1VI/SfPDYfMk9Zc0Lyx7LVUzu0l0hC3LgkTTguXV2qOzPhQAkBGoaAKA9OHuI5s5fmYnh5LSoC1KJEkzvlipfbbbYIEGAHQpnb3rXLmZlYWPCxSUsn4o6UVJJ4XDzpD0aPj4sfC5wvMvuHunNUzasixfEhVNAIANUdEEAGitQX0aE00rIo4EADpeZy+d6yvpRTObKuktSc+6+xOSfiHpEjObpaAH0+3h+Nsl9QyPXyLpss4MtrQgVwW5MS1YXt2ZHwsASMHMxprZIjObluLcz8zMzaxXZ8VDRRMAoLXKSxIqK8zVjIWrNj4YADJcpy6dc/ep0oar0Nz9EwX9mpoer5Z0cieElpKZqW9ZvhYsp6IJANLAOEl/l3RX8kEz6y/pm5I+68xguhfmavnadapvcMVyOm1DVABABjKzoCE4FU0AskCnNwPPNFuWFmj+MiqaACBq7j5Bqfv0XSvp50qxWURHKi3Mk7u0sprlcwCAjRu0RYk+WrhKDQ2dOl0BQKcj0bQRfUupaAKAdGXjBNyEAAAgAElEQVRmx0j63N2ndPZndy/MlSQtpU8TAKAVhvYv06qaOn20aGXUoQBAhyLRtBF9ywq0aGWNausaog4FAJDEzAol/VrSb1sx9hwzqzSzyqqqqnb5/O6FeZJEnyYAQKsMG9hDkvTWnKURRwIAHYtE00ZsWZovd2nhCpbPAUCa2U7SNpKmmNkcSf0kvWNmWzQd6O63unuFu1eUl5e3y4eXhRVNy0g0AQBaoV/3AvXpllDlnFSrwAGg6+jUZuCZqG9ZgSRpwfJq9e9RGHE0AIBG7v6epN6Nz8NkU4W7L+6Mz19f0bSapXMAgI0zM1Vs3UOVVDQB6OKoaNqILUvzJYk+TQAQMTMbL2mSpEFmNs/MRkUZD0vnAABtVTGwuz5ftlbzl3FtAaDroqJpIxormth5DgCi5e4jN3J+YCeFIkkqyY8rx6RlNAMHALRSY5+myk+X6pjwOgMAuhoqmjaiOBFX98JcfbZkTdShAADSSE6Oqawwj4omAECr7bRFiYryYnprNn2aAHRdJJpaYbvyYn28aFXUYQAA0kxZYS4VTQCAVovHcrTPdr30wvRFcveowwGADkGiqRW2712sWVUkmgAAX9ediiYAQBsdPriPPl+2Vh8sWBF1KADQIUg0tcL2vYu1ZHWtlqzmYgIA8JXeJQktWlkTdRgAgAxy6M69lWPSM+8vjDoUAOgQJJpaYbvexZKkj6lqAgAk6dMtX18sZ7MIAEDr9SxOaK+tu+vZD0g0AeiaSDS1wvblQaJpFn2aAABJ+pbma1VNnVZW06cJANB6hw/eQh8sWKG5bDgEoAsi0dQKW5UVKD83h0QTAOBrtijNlyQtXEFVEwCg9b61yxaSpEfe/TziSACg/ZFoaoWcHNO2vYpZOgcA+JotugWJpgUsnwMAtMGAnoXaf/teGv/mZ6pvYPc5AF0LiaZW2r53MRVNAICv6VtaIEn0aQIAtNn3hg/Q/OXVemnGoqhDAYB2RaKplbbvXazPl63V2tr6qEMBAKSJ3t0Skkg0AQDa7tCd+6h3SUL/ev3TqEMBgHZFoqmVtu9dLHcaggMAvpKfG1OPojx9QY8mAEAb5cZyNHLvAXpxRpU+mL8i6nAAoN2QaGql3bYqlSRNmbcs4kgAAOlki275VDQBADbJD/bbRiX5cV3z7IyoQwGAdkOiqZX6dS9Qr+I8TZ5LogkA8JUtSvNpBg4A2CSlhbn60UHb6bkPF+ntT5dGHQ4AtAsSTa1kZhrav0zvfsYEAAD4yhal+VrI0jkAwCY6c9+B6lWcpyue+IAd6AB0CSSa2mBo/zJ9XLVay9euizoUAECa2KJbvr5cXavqdWwWAQBou6JEXL/+9s6aPHeZ/jlpTtThAMBmI9HUBnsM6C5JmsLyOQBAaIvSfEnSohU1EUcCAMhUxw3dSgfuWK6/Pj1D85auiTocANgsJJraYEi/UpmJPk0AgPW26BYkmth5DgCwqcxMfzxuV5mZfnLPu6qta4g6JADYZCSa2qAkP1c79C6mTxMAYL2+YUXTguVrI44EAJDJ+vco1FUnD9GUucv0h/98EHU4ALDJSDS10Z4Duqvy06Wqq+cuAwBA2rKsQJI0bymJJgDA5jli1746+4BtdNekT3XHq7OjDgcANgmJpjY6aMdyrayu0zufsXwOABA0ce3TLaGPq1ZFHQoAZC0zG2tmi8xsWpPjF5jZDDN738yujCq+trjsyJ11+OA++v0TH+ixKfOjDgcA2oxEUxvtv0Mv5cZML0xfFHUoAIA0sV15sT6pWh11GACQzcZJOiL5gJkdIulYSUPcfRdJV0UQV5vFckzXj9xDw7buodH3vquH350XdUgA0CYkmtqoJD9Xwwb20IskmgAAoW3Li/Rx1Sq5e9ShAEBWcvcJkpY0OXyepP9z95pwTMb8AZ+fG9MdZw3TN7bpqUvun6J73/ws6pAAoNVING2CQwb11oyFK/X5MvpxAACCiqaV1XVavKo26lAAAF/ZUdIBZvaGmb1sZsOaG2hm55hZpZlVVlVVdWKIzStKxHXHWcN04A7luuyh9+jZBCBjkGjaBIfs1FuSWD4HAJAkbVteLEn0aQKA9BKX1F3ScEmXSrrfzCzVQHe/1d0r3L2ivLy8M2NsUX5uTLd+fy99c3Af/e7xD/SHJz5QfQPVswDSG4mmTbBdeZG2LS/SY5M/jzoUAEAa2K68SJLo0wQA6WWepIc88KakBkm9Io6pzRLxmG46fU+due9A3TZxts65q1KrauqiDgsAmkWiaROYmU6p6K+35izVJ9y9BoCst2VpgfJzc6hoAoD08oikEZJkZjtKypO0ONKINlE8lqPLj9lFVxy7i176qEon3fSa5i5ZE3VYAJASiaZNdMKeWymWY7q/kl0gACDb5eSYtulVzM0HAIiImY2XNEnSIDObZ2ajJI2VtK2ZTZN0r6QzPMN3bfiffQbqjjOH6fNla/Wdv01kgyIAaYlE0ybqXZKvQwb11r/fmae6+oaowwEARCzYeY6lcwAQBXcf6e593T3X3fu5++3uXuvu33P3Xd19T3d/Ieo428OBO5briQv215ZlBTpr3Fu6+pkZ9G0CkFZING2G04b1V9XKGv3nvQVRhwIAiNh25cWat3SNqtfVRx0KAKCL27pnkR7+8b46paKf/vbCLJ0x9k19uaom6rAAQFIbE01m1tvMtkl6buFWoGPM7Oj2Dy+9jdipt3bsU6y/vTCLuwgA0IJsmD8G9SlRg0sfLVwZdSgAkHGyYZ5ob/m5MV150u76y4m76c05S/Sdv01U5ZwlUYcFAG2uaBon6eKk57+TdKOkIyQ9bGZntk9YmSEnx3ThoTto1qJVVDUBQMvGaTPnDzMba2aLwl4bjceuMLOpZjbZzJ4xsy3bOe5WG9KvVJI0Zd7yqEIAgEw2TlxnbJJThw3QQ+ftq9xYjk65ZZL+9vxMboIDiFRbE017SnpBkswsR9J5kn7l7jtJ+qOk0e0bXvo7ate+2qF3scY895Fq6+jVBADNaI/5Y5yCC45kf3X3Ie4+VNITkn7bbhG3Ub/uBepRlKepc5dFFQIAZDKuMzbDrluV6j8X7q+jd99SVz/7kU6/7XV9sbw66rAAZKm2JppKJX0ZPt5LUg9Jd4fPX5C0fTvFlTFyckyXHbmTPqlarbGvzo46HABIV5s9f7j7BElLmhxbkfS0SFJkt3DNTEP6lWoqFU0AsCm4zthMJfm5GnPqUP31pCGaMne5jrxugp7/cGHUYQHIQm1NNM2TNDh8/G1J09398/B5qaSsTJsfunMffXNwH1333Ex9vmxt1OEAQDrqsPnDzP5oZnMlna5mKprCPh+VZlZZVVW1qR+1UUP6lWnmopVaU1vXYZ8BAF0U1xntwMx0ckV/PXHh/upbWqBRd1bqd4+/r5o6NqoA0HnammgaK+lKM3tA0s8l3Zp0brikD9srsExz+TG7SJJ+8eBUNbAmGgCa6rD5w91/7e79Fdz5Pr+ZMbe6e4W7V5SXl2/qR23U7v1K1eDStM9XbHwwACAZ1xntaLvyYj3043115r4Ddcerc3TCja/pk6pVUYcFIEu0KdHk7n+WdIGkL8Lf1yed7iHptvYLLbNsVVag/z16sCbOWqybJ3wcdTgAkFY6af64R9KJ7fA+m2xIvzJJ0tR59GkCgLbgOqP95efGdPkxu+i271do/rK1+s7fJur+yrly56Y4gI4Vb+sL3P0uSXelOP6jdokog506rL8mzlqsq5/5SEP7lWnf7XtFHRIApI2OmD/MbAd3nxk+PUbS9E19r/ZQXpLQlqX5mkxDcABoM64zOsZhg/voqYsO1Oj73tXPH5yql2Ys0p+O301lhXlRhwagi2pTRZOZ7Wxmw5OeF5rZn8zsETO7oP3Dyyxmpj+fsJu2Ky/Suf96W7MWrYw6JABIC+0xf5jZeEmTJA0ys3lmNkrS/5nZNDObKulwSRd1yD+gDfbepocmzlqsdfXsRAoArcV1RsfaojRfd/9wuH5xxE565v2FOmLMK3pt1uKowwLQRbW1R9ONko5Oev5XBX/U50v6i5ld2l6BZaqS/FyNPXOYEvGYzhj7luYuWRN1SACQDjZ7/nD3ke7e191z3b2fu9/u7ie6+67uPsTdj05qHBuZI3frq2Vr1un1T77c+GAAQCOuMzpYLMd03sHb6eEf76fCREyn3/6G/vzkhzQKB9Du2ppo2lXB3WSZWa6k70ka7e5HSPqVpB+0b3iZqV/3Qo07a5hW1dTptFtfJ9kEAFk0fxy0Y7mK8mJ68r0FUYcCAJkka+aJqO3Wr1RPXLC/vrv3AN0y4RMdf8NrrMQA0K7ammgqktS4lc7w8PlD4fN3JG3dTnFlvF23KtXdP/wGySYACGTN/JGfG9OhO/fR0+8vVB3L5wCgtbJmnkgHhXlx/fH43XTb9yv0xYpqffv6ifrnpDk0CgfQLtqaaPpEwRe/JB0v6V13b1wb0EsSqfAkTZNNH7OlKIDslVXzx1G79dWS1bWaxPI5AGitrJon0sVhg/vov6MP0PBte+o3j76vUXdWqmplTdRhAchwbU00XSvpD2b2lqQL9fVtRw+WNLWd4uoyGpNN1evqdcKNr+kNLjoAZKesmj8OHlSu7oW5GjtxdtShAECmyKp5Ip30LsnXuLOG6fKjB2virMU68roJemH6wqjDApDB2pRocvfbJR0m6V5J33L3fyadXiJpTDvG1mXsulWpHv7xfupZnKf/uf1NPTo58l61ANCpsm3+yM+N6YcHbKsXZ1Rp6rxlUYcDAGkv2+aJdGNmOnO/bfT4+furV3FCPxhXqd88Mk1ra2kUDqDt2lrRJHef4O5Xu/vzTY5f7u7/aem1ZtbfzF40sw/N7H0zuyg8frmZfW5mk8Ofo5Je80szm2VmM8zsW22NN10M6Fmoh87bV3sMKNNF907Wtc9+pIYG1kADyB6bM39kou/vs7VKC3J1/fOzog4FADJCts0T6WjQFiV69Pz99MP9t9E/X/9UR/99oqZ9vjzqsABkmDYnmsyszMx+YWaPm9mr4e+fm1lZK15eJ+mn7r6zgjXYPzGzweG5a919aPjzZPhZgyWdJmkXSUdIutHMYm2NOV2UFebprlF768Q9++m652fq7LsqtXztuqjDAoBOsZnzR8Ypyc/VqP230XMfLtR/p30RdTgAkPaybZ5IV4l4TP/vO4P1z1F7a8XadTr+xld1y8sfc5McQKu1KdFkZttJmibp9wp2gvgs/P17SVPD881y9wXu/k74eKWkDyVt1cJLjpV0r7vXuPtsSbMk7d2WmNNNIh7TVScP0e+P3UUvf1SlY/8+UTO+oLchgK5tc+ePTHXuQdtq9/5l+tkDUzRrERtCAEBzsnWeSGcH7FCup0cfqEN36qM/PzVd373tdc1byk7aADZuU5qBL5W0rbuPcPeR7j5C0naSlkm6prVvZGYDJe0h6Y3w0PlmNtXMxppZ9/DYVpLmJr1snlpOTGUEM9P39xmoe88ZrtW19Truhlf1+JT5UYcFAB2p3eaPTJKIx3TT6XsqEc/RmXe8qTmLV0cdEgCkq6ycJ9Jd96I83fS9PXXliUP03rzlOnLMK/r32/PkTnUTgOa1NdF0sKTfuvvXulmHz38n6ZDWvImZFUv6t6TR7r5C0k0KJpGhkhZIurpxaIqXb/CtZmbnmFmlmVVWVVW18p8SvYqBPfSfC/bXLlt20wXj39XvH/9AtXUNUYcFAB3hYLXD/JGJtiwr0B1nDdPqmjqdfMskVc5ZEnVIAJCODlaWzhPpzsx0yrD++u/oA7Vz32766QNTdN6/3tGS1bVRhwYgTbU10eSSmuuRlKMUSaCmzCxXQZLpbnd/SJLcfaG717t7g6R/6KvlcfMk9U96eT9JG5T+uPut7l7h7hXl5eWt/sekg97d8nXP2cN15r4DNfbV2Tr55tc0dwklqQC6nM2ePzLZkH5luv/cfZQXy9FJN0/SZf+eync9AHxdVs8TmaB/j0KNP2e4LjtyJ70wfZEOv3aCnv9wYdRhAUhDbU00vSjpCjPbOvlg+Pz3kp5P+aqvxpmk2yV96O7XJB3vmzTseAXrsyXpMUmnmVnCzLaRtIOkN9sYc9rLi+fo8mN20c3f20uzF6/WUde/oqfeWxB1WADQnjZr/ugKduhTomcuPlA/3H8bPfj2PB181Uu6YPy77OYDAIGsnycyQSzH9KODttOj5++nXsV5GnVnpS7791StqqmLOjQAacTasr427Kv0goLKonckLZTUW9JeCnopHeruc1p4/f6SXpH0nqTGNWK/kjRSwbI5lzRH0rnuviB8za8l/UDBjnWj3f2plmKsqKjwysrKVv+b0s3cJWt0/vh3NWXuMn1/n631q6N2Vn5uxm60ByCNmNnb7l4R0WcP1GbMH+0pHeaJBcvXatyrc3TPG59pZU2dvrFND43afxsdunMfxXJSrRoHgI7HPBFIh3kiE9TU1evaZ2fqlgkfq3/3Ql1zyu6qGNgj6rAAdKDWzhNtSjSFb5ynIPEzTFJfBT2V3pD0iKSd3H1C28NtP11hYqita9Bfn56uf7wyW7ts2U03fHdPDexVFHVYADJclBcQ4eenxfyRTvPEiup1uu/NuRr32hx9vmyttu5ZqDP3HaiTK/qrOBGPOjwAWYZ5IpBO80QmeGvOEl1y/2R9vnStzj1oO1182I7Ki7d14QyATNBhiaYWPvBESfe7e6TlN11pYnjug4X62YNTVFfvuuK4XXT8Hv2iDglABov6AqI5nT1/pOM8UVffoGc+WKjbJ87W258uVUkirlOH9dcZ+w5U/x6FUYcHIEswTwTScZ5Id6tq6vSHJz7QvW/N1c59u2nMqUM1aIuSqMMC0M5aO0+Qak5jhw3uo/9ceIB27luii++botH3vquV1euiDgsA0M7isRwdtVtf/fu8ffXIT/bTwTv11h2vzdHBV72k0fe+qxlfrIw6RAAAmlWciOv/Thyi275foaqV1Tr6bxN164SPVd9AD3cgG5FoSnNblRVo/NnDdck3d9TjUxfoqOtf0dufLo06LABABxnav0x/G7mHJv7iEP1gv4F65oOF+taYCTr7rkq9+xnf/wCA9HXY4D56evSBOmSncv3pyeka+Y/X2WUVyEIkmjJAPJajCw/dQfefu4/cpVNumaTrn5/JHQIA6ML6lhbo198erFd/MUKjD9tBb85eouNvfE3f/cfr3HAAgCbMbKyZLTKzaUnHLjezz81scvhzVJQxZouexQnd/L29dNXJu+uD+St05HWv6P7KuWqvli0A0h+Jpgyy19bd9eRFB+joIX11zbMfaeStr+vzZWujDgsA0IG6F+Vp9GE76tXLRujXR+2sjxau1Ik3vaaz76rURwtZUgcAoXGSjkhx/Fp3Hxr+PNnJMWUtM9NJe/XTf0cfoF236qafPzhV5/zzbS1eVRN1aAA6wUa3tDGzKkmtST8nNj8cbEy3/FyNOW0PHTSoXL955H0dOWaC/nTCbvrOkC2jDg0Avob5o30VJ+I6+8Bt9d1vDNAdr87WLS9/oiPGTNAJe/bT6MN2UL/uNA0HkFnac55w9wlmNnBzY0L76te9UPf8cLjGvjpbVz49Q4dfO0F/OG5XHbVb36hDA9CBWrN38g1q3QSATnT8Hv2014AeuvDed3X+Pe/q5RlVuvyYXVTEdtgA0gfzRwcoSsR1/ogddPo3ttaNL83SnZM+1WOT5+t7w7fWTw7ZTj2LydsByBidMU+cb2bfl1Qp6afunnLtsZmdI+kcSRowYEAHh5RdcnJMPzxgWx20Y7l++sAU/fjud/SdIX11xbG7qntRXtThAegA1tXWymbbdqTr6ht0/fMz9fcXZ2lgzyJde+pQDe1fFnVYANJQum5b3dm62jwxf9laXffcTD3w9lwV5cV1/ojtdeZ+A5WId8ou4AC6kEyfJ8KKpifcfdfweR9JixUks66Q1Nfdf7Cx9+lq80Q6qatv0M0vf6zrnp+p0oI8/fmE3fTNwX2iDgtAK7V2nqBHU4bLjeXop4cP0r1nD1dtXYNOvOk1jXnuI62rb4g6NABAJ9iyrEB/OWmInrn4QO29TQ/9+anp+uY1E/TUewtovAogq7n7Qnevd/cGSf+QtHfUMWW7eCxH54/YQY/+ZH+VlyR09l2VuuT+yVq+Zl3UoQFoRySauohvbNtTT40+QMfuvqXGPDdTJ908SZ9UrYo6LABAJ9m+d4luP3OY/jlqbxXkxnTe3e/o1Fte13vzlkcdGgBEwsySGwEdL2lac2PRuQZv2U2P/mQ/XThiez06eb4OH/OyXpqxKOqwALQTEk1dSLf8XF1z6lDd8N099emXq3XU9a/on69/yh1tAMgiB+xQrv9cuL/+dPxu+mTxKh3994m65P7J+mJ5ddShAUCHMbPxkiZJGmRm88xslKQrzew9M5sq6RBJF0caJL4mL56jSw4fpEd+vJ9KC3J15h1v6bJ/T9XKaqqbgExHj6YuauGKal364FRN+KhKB+1Yrr+eNES9u+VHHRaACGV67432kk3zxMrqdbrhxY81duJsxXJM5x60rc49cDsV5NG/CcCGmCcC2TRPpIuaunpd++xM3TrhY/UtLdCVJw3Rftv3ijosAE3QoynL9emWrzvPGqYrjt1Fb8z+UoePCfp1AACyR0l+ri47cic9/9ODNGKn3hrz3EwdctVLeuideWpo6Fo3mgAAmSsRj+myI3fSg+ftq0Q8R6ff9oZ+88g0ra6pizo0AJuARFMXZmb6n30G6j8XHqCtexTqvLvf0SX3T9YKylEBIKv071GoG07fUw/8aB/17pbQJfdP0XE3vqq35iyJOjQAANbbc0B3PXnRARq1/zb61xuf6sjrXtGbs5mrgExDoikLbFderAfP21cXHrqDHp08X0eOeUWvf/Jl1GEBADrZsIE99MiP99O1p+6uRStqdPLNk/STu9/R3CVrog4NAABJUn5uTL/5zmDdd84+kqRTb52kK574QNXr6iOODEBrkWjKErmxHF3yzR31wI/2UW7MNPIfr+uP/+ELG0BmMLOxZrbIzKYlHfurmU03s6lm9rCZlUUZY6bIyTEdv0c/vfizg3XxYTvqhemLdOg1L+uqp2ewRAEAkDb23qaHnrroAH3vG1vr9omzddR1r+idz5ZGHRaAViDRlGUay1G/u/cA/eOV2fr29a9o8txlUYcFABszTtIRTY49K2lXdx8i6SNJv+zsoDJZQV5MFx22g1742UH69m599fcXZ2nE1fRvAgCkj6JEXFcct6vu/uE3VFPXoJNueo2b5UAGINGUhQrz4vrj8bvprh/srTW19Trhxlf116enq6aOL2wA6cndJ0ha0uTYM+7eWILzuqR+nR5YF9C3tEDXnjpUD/14X21RWqBL7p+i4296jbvGAIC0sd/2vfTf0QfotPBm+ZHXvUKfQSCNkWjKYgfuWK7/jj5QJ+7ZTze8+LGO/furmvb58qjDAoBN8QNJT0UdRCbbc0B3PXzevrr65N21YNlanXDjaxp977tasHxt1KEBAKCS/Fz96fjddM8Pv6F19Q065ZZJuvyx97WmlmXfQLoh0ZTlSgty9deTd9ftZ1RoyepaHXfDqxrz3EdaV98QdWgA0Cpm9mtJdZLubmHMOWZWaWaVVVVVnRdchsnJMZ24V9C/6fxDtteT077QiKte1vXPz2SZAgAgLey7fS89PfpAnbHPQI17bY6+NWaCXpu1OOqwACQh0QRJ0qE799EzFx+oo3ffUmOem6njbnhV079YEXVYANAiMztD0nckne7uzTYWcvdb3b3C3SvKy8s7L8AMVZSI62ffGqTnLzlIh+xUrmue/UiHXv2yHp8yXy38ZwYAoFMUJeK6/JhddP+5+yhmpu/e9oZ+9fB7Wlm9LurQAIhEE5KUFebp2lOH6ubv7aWFK6p19N8m6oYXZ6mO6iYAacjMjpD0C0nHuPuaqOPpivr3KNSNp++le88ZrtKCXF0w/l2dcsskllkDANJCsDPdgTr7gG1075uf6VvXTtDLH1G5DESNRBM2cMSuW+iZiw/S4btsob8+PUMn3vSaZi1aGXVYALKYmY2XNEnSIDObZ2ajJP1dUomkZ81sspndHGmQXdjwbXvq8Qv2159P2E2fVK3W0X+fqJ8/OEWLVlZHHRoAIMsV5MX0628P1oPn7auCvJjOGPumLn1gipavpboJiIp1tRL4iooKr6ysjDqMLuOJqfP1m0emaXVtvS755o764f7bKB4jPwlkIjN7290roo4jaswTm2dF9Tr9/YVZuuPV2UrEYzp/xPY6a7+BSsRjUYcGYDMxTwSYJzJX9bp6Xf//2bvv8KjK/P3j7yeN0EIvoSWhhC7SexKaFMXeFcUCYkGaWHa/q+66v9UVBXsHBUVRsSEr0pPQMYA06QkhoYYWCJD+/P6YYTciTZjkzCT367pyJXMymdxOQm7PZ855zvxtvB+fSNVyQfzrhpb0alrD6VgixcbF9oQmBnJe11xRizmjounRuBovzdrMje8u1dpNIiIlWEhwIH8Z0JQ5o6LpVL8yL83azFUT4pm9cZ/WbxIREUcFB/rzZL8mfP9IVyqVCeKByQmMnLaGIyeynY4mUqJo0CQXVK18Kd67uy1v39mG3UdOMfDNxUyYu5XsXK3dJCJSUkVULctH97bn0wc6EOTvx0OfruLuiSv0YoSIiDiuZZ0KzHisGyN6NWLmur30mRDHrPV7nY4lUmJo0CQXxRjD1VeEMnd0NFe3DOX1+dsY+OZi1qYcdTqaiIg4qHujaswa0Z1/XNecjXuOMeD1Rfzf9+s5rFePRUTEQUEBfozqE8mMx7pRIySYh6eu5tGpqzmYkeV0NJFiT4Mm+VMqlw3itdtbM2lwO9JP5XDDO0v410+byMzJczqaiIg4JMDfj3s6hxP7RAz3dA7ni5UpxIxbyMTFSeToyqUiIuKgZrVC+P7Rrozt2yOJps4AACAASURBVJi5v+2n9/g4vlmVqtO9RQqRBk1ySXo2qcGc0VHc1r4eH8Qn0v/1RaxMOux0LBERcVDFMkE8f21zZo3oTqu6FXlh5m9av0lERBwX6O/Hoz0a8p/Hu1G/alnGfL2WeyatJOXwSaejiRRLGjTJJQsJDuTFG1vy+YMdyc3P59b3l/HsDxvIyMp1OpqIiDgoskZ5ptzfgUmD2+HvZ3jo01Xc9sFy1qXqdGsREXFOoxrlmT6sC3+/tjmrk49w1YR4Ji5OIi9fL4aIeJIGTXLZujSsyuyRUdzfNYJPlyfTd0I8cVvTnI4lIiIOMsbQs0kNfh7RnX9e34IdBzK49q0ljJy2htQjegVZRESc4ednuLdLOHNGu66e+sLM33RlbREP06BJPKJMUADPDmzG9GFdKB3kz72TVjL6y185pMX2RERKtAB/P+7uFEbs2Bge7dGAWRv20fPVOF6atZljmTlOxxMRkRKqdsXSTBrcntdvv5KUwye55o3FjJ+zhaxcrT0rcrk0aBKPahtWiZnDuzG8Z0N+XLdHi+2JiAgA5YMDGdu3CQufiOGalqG8F7eDmHGxTFm2UwuGi4iII4wxXHdlbeaNjmZgq1q8sWA7A15fRMJOrT0rcjk0aBKPCw70Z8xVjfnP492pX60cY75ey6CJK0k+dMLpaCIi4rBaFUsz/rYrmTm8G5E1yvHsDxvp+1o8c3/brxclRETEEZXLBjHhtiv55L72ZObkc/N7y/jb9xs4riNvRS6JBk1SaCJrlOfrhzrzwvUtWJtylKsmxPNu7A69ci0iIrSoXYEvhnTio3vaATBkSgK3a8FwERFxUEzj6swZFcV9XcP5bEUyV02IZ/6m/U7HEvE5GjRJofLzMwzqFMbc0dH0aFydf/+8mYFvLubXFO1IiIiUdMYYejerweyRUbxwXXO2uRcMH/Xlr+w+esrpeCIiUgKVLRXAcwOb8+3DXQgJDuSByQkM/2INB7X2rMhF06BJikTNCsG8N6gt7w9qy9GTOdzwzhL+/uNGMrJynY4mIiIOC/T3Y1DncGLHxvBwTAP+s34vPV+J5eWfN+u0BRERcUTrepX4cXg3RveJZPaGfVp7VuRP0KBJilTf5jWZOzqKQZ3C+GTpTq4aH6fDUUVEBICQ4ECe6udaMHxAy1DeiXUtGP7pMi0YLiIiRS8owI/HezXiP493o4F77dl7Jq0k5fBJp6OJeDUNmqTIlQ8O5B/XtWD6sC6UCw7ggckJPDJ1FfvSM52OJiIiXqB2xdJMuO1KZjzWlQbVy/G3HzbS77V45mnBcBERcUAj99qz/7iuOauTj9BnQhzvxWntWZFz0aBJHNM2rBIzh3fniasimb/pAL1ejWXi4iRy9QdbRESAK+pU5MuhnfhgUFushQenJHDHh8tZn5rudDQRESlh/PwM93QOZ96YaKIaVeOlWa61Z9fsOuJ0NBGvo0GTOCoowI/HejZi7qho2kdU5oWZvzHwrSWsStYfbBERcS0YflXzmswe5VowfOv+DAa+tVgLhouIiCNCK5Tmg3va/Xft2RvfXcqzP2zgmNYUFPkvDZrEK9SrUoaPB7fn3bvacORENje9u5Rnvl3H0ZPZTkcTEREvUHDB8EdiGvDT+r30eCWWl2Zt1v/ciwjGmEnGmAPGmA1n+dwTxhhrjKnqRDYpnvo2r8m8MdHc2zmcT5cn02d8HLPW79Up3iJo0CRexBhD/5ahzBsTzZDuEXyVkErPV+P4OiFFf7BFRARwLRj+pHvB8GuuCOW9ONeC4ZOXasFwkRLuE6DfmRuNMXWBPsCuog4kxV+5UgE8f21zvn+kK1XKluLhqasZMiVBR9xKiadBk3idcqUC+OvVzZg5vBsRVcsydvo6bn1/GVv2HXc6moiIeIlaFUsz/tYrmTm8G41rlOe5GRu5akI8P2/YpxcnREoga208cPgsn5oAPAnoD4MUmlZ1KzLjsa78dUBTlmw/RJ/xcXy0KFFrz0qJpUGTeK2moSF8/VBnXr7pCrYfyODqNxbx4k+bOJGV63Q0ERHxEi1qV+DzIR2ZNLgdAX6GYZ+t4ub3lpGw82z7myJSkhhjrgV2W2vXXsR9hxpjEowxCWlpaUWQToqbAH8/hkTVZ+7oKDrVr8I//7OJ699ZogtYSImkQZN4NT8/w63t6zJ/TAw3tanD+/GJ9Bkfp1esRUTkv4wx9GxSg1kjuvPijS1JOXySm99bxpApCWw/oKNhRUoiY0wZ4K/Asxdzf2vtB9badtbadtWqVSvccFKs1alUhon3tuPtO9uw/1gW1729mL//uJEMvVguJYgGTeITKpcN4t83X8H0YZ0JKR3IsM9W8eDkBJIPnXA6moiIeIkAfz/u6FCP2LExPHFVJMt2HOKqCfE8NX0de9O1XoZICdMAiADWGmN2AnWA1caYmo6mkhLBGMPVV4Qyf0w0d3asxydLd9JnfBxzNu5zOppIkdCgSXxKu/DK/Di8G/93dVOWJR6iz4R4Xp2zhVPZeU5HExERL1EmKIDHejYibmwMg7tE8O2aVGLGua5Ql35SV6gTKQmsteuttdWtteHW2nAgFWhjrdWevhSZkOBA/nl9S6YP60JIcCBDP13FQ58msC890+loIoVKgybxOYH+fjzYvT4LxsTQv0VN3lywnV6vxvKTLicqIiIFVClXimcHNmPBmBgGtAzl/fgdRI1byAfxO8jM0QsUIsWJMeYLYBnQ2BiTaox5wOlMIqe1DavEzMe78WS/xsRuSaPXq7FMXJykxcKl2DLFbce8Xbt2NiEhwekYUoRWJh3m2R82sHnfcbo0qMLfr21OoxrlnY4l4nWMMauste2czuE09UTJtXFPOi//vIW4rWmEVghmVJ9IbmpTB38/43Q0Ea+gnnBRT0hhSj50gmd/2Ejc1jSahYbwzxta0KZeJadjiVyUi+0JHdEkPq9DRGVmDu/GP65rzobd6fR/fREvzPyNY5k6PUJERP6nea0KTL6/A58P6Uj18qV4cvo6+r4Wz88bdESsiIgUjbAqZfnkvva8c1cbDp/I5qZ3l/LMt+s5ejLb6WgiHqNBkxQLAf5+3NM5nIVPxHBLuzpMWpJEz1fimL4qlfx87TyIiMj/dGlQle8f7co7d7XBWsuwz1Zz3dtLWLQtTQMnEREpdMYYBrQMZd6YaB7oGsFXCSn0fDWOrxNS1ENSLBTpoMkYU9cYs9AYs8kYs9EYM8K9vbIxZq4xZpv7fSX3dmOMecMYs90Ys84Y06Yo84rvqVKuFC/eeAU/PNqVupVL88TXa7n5vaVs2J3udDQREfEip/8nf/bIKF6++QoOZWQzaOJK7vhwOat3HXE6noiIlADlSgXwf9c048fHuhFepQxjp6/j1veXsWXfcaejiVyWoj6iKRcYY61tCnQCHjXGNAOeBuZbaxsB8923AfoDjdxvQ4F3iziv+Kgr6lTkm2FdGHfzFew6fJKBby3mmW/Xc/iEDkkVEZH/CfD349Z2dVnwRDTPDWzG9gMZ3PjOUh6cnMDmfcecjiciIiVAs1ohTB/WhX/f1JJtBzK4+o1FvPjTJk5k5TodTeSSFOmgyVq711q72v3xcWATUBu4Dpjsvttk4Hr3x9cBU6zLcqCiMSa0KDOL7/LzM9zSri4LnojhfvchqT1eiWXy0p3k6AoPIj7FGDPJGHPAGLOhwLZb3EfH5htjSvzitXJ5SgX4c1/XCOLG9mBs38asSDpE/9cXMXLaGpIPnXA6noiIFHN+fobb2tdjwZgYbmxTm/fjE+kzPo6fN+zT6XTicxxbo8kYEw60BlYANay1e8E1jAKqu+9WG0gp8GWp7m1nPtZQY0yCMSYhLS2tMGOLDwoJDuRv1zRj1ojuNK8VwnMzNtL/9UXEbdXviogP+QTod8a2DcCNQHyRp5Fiq2ypAB7t0ZBFT/ZgWHQDft64j16vxvGX79azLz3T6XgiIlLMVS4bxMs3t2L6sM6ElA5k2GereGByAimHTzodTeSiOTJoMsaUA74BRlprz3dc+tmuN/yHca619gNrbTtrbbtq1ap5KqYUM5E1yjP1wY58MKgtOXn53DtpJfd9vJLtBzKcjiYiF2CtjQcOn7Ftk7V2i0ORpJirWCaIp/o1IX5sD+7oUI+vfkkhetxC/vXTJo7oNGwRESlk7cIr8+Pwbvx1QFOWJx6iz4Q43l64nexcnZkh3q/IB03GmEBcQ6ap1tpv3Zv3nz4lzv3+gHt7KlC3wJfXAfYUVVYpfowxXNW8JnNGRfHXAU1J2HmEvq/F8/yMjbqkqEgxpiNf5VJVDwnmhetbsGBMDFe3DOXDRYlEvbyQN+ZvI0NrZ4iISCEK9PdjSFR95o2OJiayOuNmb6H/6/Es3XHQ6Wgi51XUV50zwERgk7V2fIFPzQDudX98L/BDge33uK8+1wlIP32KncjlKBXgz5Co+sSOjeH29nWZsmwn0eNi+WRJktZvEimGdOSrXK56Vcow/rYrmT0yii4NqzB+7laiX17IxMVJZObkOR1PRESKsVoVS/PeoLZ8PLg92Xn53PnhCkZMW8P+YzqlW7xTUR/R1BUYBPQ0xvzqfhsAvAT0McZsA/q4bwP8BCQC24EPgUeKOK8Uc1XKleL/3dCSn0Z0p0XtEJ7/8Tf6vRbPwi0HLvzFIiJS4kTWKM/7g9rx/aNdaRoawgszf6PnK7F8+csucvVChYiIFKIeTaozd1Q0w3s2ZNb6ffR8JZYP4xP1Qrl4HVPcVrBv166dTUhIcDqG+CBrLfM3HeD//bSJpIMniI6sxv9d3ZRGNco7HU3EI4wxq6y1Pnt1NvdFJGZaa1ucsT0WeMJae1F//NUT4klLtx/k37O3sDblKPWrlmX0VZEMaBGKn9/ZlpkU8W6+3hOeop4QX7Dz4An+/uNGFm5Jo1H1cvz9uuZ0aVDV6VhSzF1sTzh21TkRb2OMoXezGsweGcX/Xd2U1buO0O/1RTw/Y6MWfhVxmDHmC2AZ0NgYk2qMecAYc4MxJhXoDPzHGDPb2ZRSEnVpWJXvH+nCB4PaEuBveOzzNQx8azELtxzQ5ahFRKTQhFcty6TB7fnwnnacysnjzg9X8Njnq9mbfsrpaCI6oknkXA5lZPHavG1MXZFMuVIBPNazIfd0Dic40N/paCKXRK9Uu6gnpLDk5VtmrN3N+LlbSTl8ivbhlXiyXxPah1d2OprIRVFPuKgnxNdk5uTxbuwO3o3bQYCf4fFejbi/awRBATquRDxLRzSJXKYq5UrxwvUtmDUiijZhlfjXT5vpPT6OH37dTX5+8RrQiojI5fP3M9zQug7zR8fwwvUtSD50klveW8bgj1eyYXe60/FERKSYCg70Z1SfSOaNiqZLg6q8NGsz/V+PZ/E2XZ1OnKFBk8gFNK5Znk/u68BnD3QkJDiQEdN+5fp3lrA88ZDT0URExAsFBfgxqFMYcWN78HT/JqzZdZRr3lzMo5+vJjEtw+l4IiJSTNWrUoaP7m3Hx4Pbk5tvuXviCh6Zuoo9R3U6nRQtDZpELlK3RlWZObwbr97SioPHs7j9g+U8OPkXth847nQ0ERHxQqWD/BkW3YD4J3swvGdDFm4+QJ8J8Tw1fZ3+p19ERApNjybVmT0yijF9Ilmw+QC9Xo3j7YXbycrNczqalBAaNIn8CX5+hpva1mHBEzE81a8JKxIP0/e1Rfzlu/UcOJ7pdDwREfFCFUoHMuaqxsQ/2YN7Oofx3ZrdxIyL5R8//sahjCyn44mISDEUHOjP8F6NmDc6mqjIqoybvYV+ry0ibmua09GkBNCgSeQSBAf683BMA+Ke7MGgTmF89UsKMeNieX3eNk5m5zodT0REvFDVcqV4bmBzFo6N4frWtfhkaRJRLy9k/JwtHMvMcTqeiIgUQ3UqleH9Qe2YfH8HDHDvpJU89GkCqUdOOh1NijENmkQuQ+WyQTx/bXPmjo4mOrIaE+ZtJWZcLNNW7iJPC4aLiMhZ1K5YmpdvbsWcUdHENK7OGwu2E/XyQt6P20Fmjk5rEBERz4uOrMaskd15sl9j4rcepPf4OF6ft029I4VCgyYRD4ioWpZ3727LNw93pk6l0jz97Xr6vx7PvN/2Y60GTiIi8kcNq5fj7bvaMHN4N1rVqciLszYTPW4hny1PJicv3+l4IiJSzJQK8OeRmIbMHxNNr6Y1mDBvK71ejeOn9Xu1zyIepUGTiAe1DavMNw934b2725CTZ3lwSgK3vLeMlUmHnY4mIiJeqkXtCky+vwNfDu1E3Upl+L/vN9Dr1Ti+SkghVwMnERHxsFoVS/P2nW2YNrQT5YMDeGTqau74cDmb9x1zOpoUExo0iXiYMYZ+LUKZMyqKF29sScqRk9z6/jLu+3glm/bqj7eIiJxdx/pV+HpYZz4e3J4KpQN5cvo6eo2PY/qqVA2cRETE4zrVr8LM4d144foWbN53nAGvL+LZHzZw9GS209HEx2nQJFJIAv39uKNDPWKf6MHT/ZuwKvkIA95YxMhpa9h1SIvviYjIHxlj6NGkOjMe68qH97SjXKkAnvh6LX0mxPPt6lSt/yciIh4V4O/HoE5hxD4Rw6BOYXy2PJmYV2L5dNlOvcghl0yDJpFCVjrIn2HRDVj0ZE8ejm7Azxv30fPVWJ79YQMHjmc6HU9ERLyQMYY+zWowc3g33h/UluBAf0Z/tZY+4+P4fs1uDZxERMSjKpYJ4u/XteCnEd1pWjOEv/2wkWveXMyyHYecjiY+SIMmkSJSoUwgT/ZrQtzYHtzWvi5TV+wi+uVYXpmty1qLiMjZGWPo27wm/xnejffubkNQgB8jv/yVqybEMWPtHg2cRETEo5rUDOHzIR159642HM/M5Y4Pl/PI1FWkHtEZGXLxTHFbXb5du3Y2ISHB6RgiF5R08ATj527lx7V7qFgmkEdiGnBP53CCA/2djibFlDFmlbW2ndM5nKaeEF+Wn2/5eeM+Xpu3la37M2hUvRwjejdiQItQ/PyM0/HEx6knXNQTIi6ZOXl8EJ/IO7HbsRaGRTdgWHQDSgdpf6Wkutie0BFNIg6JqFqWN+9o/d/LWv/rp83EjIvl8xW7dFlrERE5Kz8/w4CWofw8Ioo372iNBR77fA39X1/ET+v3kq8jnERExEOCA/15vFcj5o+JoU+zGrw+fxu9x8cxc90eitsBK+JZGjSJOOz0Za2/GNKJ0IrB/OW79fR8NVZXGRIRkXPy8zMMbFWL2SOjeP32K8nJz+eRqasZ8MYift6ggZOIiHhO7YqleevONnw5tBMhpQN57PM13P7Bcn7boytqy9lp0CTiJTo3qMK3D3dh0uB2hAQH8sTXa7lqQjwz1u7RDoOIiJyVv5/huitrM3dUNK/ddiXZufkM+2w117y5mNkb9+kVZykxjDGTjDEHjDEbCmx7wRizzhjzqzFmjjGmlpMZRXxdx/pVmDm8G/+8vgVb9x/nmjcX8cy36zmYkeV0NPEyWqNJxAtZa5m9cR/j57rW4Ghcozyj+kTSt3kNjNEaHHJptPaGi3pCirPcvHxmrN3DG/O3sfPQSZrXCmFk70h6N62u/pAL8uWeMMZEARnAFGttC/e2EGvtMffHjwPNrLXDLvRY6gmRCzt6MpvX52/j02XJBAf681jPhtzXNZxSAVq/qTjTGk0iPswYQ78Wocwa4T4lIi+fYZ+tYuBbi1mweb9eoRYRkbMK8PfjxjZ1mDc6mlduacXxzFyGTEng2reWMH+T+kOKL2ttPHD4jG0Fz+spC+gfgIiHVCwTxHMDmzN7VBQdIyrz0qzN9Bkfz6z1e9U1okGTiDc7fUrEnFFRvHJLK9JP5XD/Jwnc+O5SFm87qD/iIiJyVgH+ftzctg7zx0Tz8k1XcPRUNg9Mdg2cZm/cp1OypcQwxvw/Y0wKcBfw7HnuN9QYk2CMSUhLSyu6gCI+rkG1ckwc3J5PH+hA6UB/Hp66mts+WM6G3elORxMH6dQ5ER+Sk5fP1wmpvLlgG3vTM+kYUZkxVzWmQ0Rlp6OJD/DlUyI8ST0hJVFOXj7frk7lndgdJB86SZOa5Xm0R0MGtAzF30+n1ImLr/eEMSYcmHn61LkzPvcMEGytfe5Cj6OeELk0uXn5TPslhfFzt3LkZDY3t6nD2L6NqR4S7HQ08RCdOidSDAX6+3Fnx3osfCKG5wc2I/HgCW59fxmDJq4gYefhCz+AiIiUSIH+ftzWvh7zR7sWDc/Ntwz/Yg19JsTxzapUcnSVUyn+PgducjqESHEW4O/H3Z3CWPhEDEO61+f7X3cT80osby/cTmZOntPxpAhp0CTig4ID/RncNYL4sT3464CmbNp7jJvfW8ZdHy1nZZIGTiIicnYB/n5c37o2c0ZG8c5dbSgV4M+Yr9fS89VYPl+xi6xc7QhI8WGMaVTg5rXAZqeyiJQkFUoH8pcBTZk7KprujaoybvYWer0ax49r92jpjxJCp86JFAMns3P5fMUu3otL5GBGFp3qV2ZEr0g6N6jidDTxIr5+SoSnqCdE/sday/xNB3hzwTbWpqYTWiGYh6Lqc3uHegQH6spBJY0v94Qx5gsgBqgK7AeeAwYAjYF8IBkYZq3dfaHHUk+IeNbSHQd5YeYmNu09RtuwSvztmmZcWbei07HkElxsT2jQJFKMnMrO4/OVu3gvbgdpx7PoEFGZkb0a0blBFV3WWnx6B8KT1BMif2StZdG2g7y5YBu/7DxC1XKlGBoVwV0dwyhbKsDpeFJE1BMu6gkRz8vLt0xflcK42Vs5mJHFja1rM7ZfY0IrlHY6mvwJGjSJlGCZOXlMW7mLd+N2sP9YFu3DKzGiVyRdG2rgVJJpB8JFPSFyfisSD/Hmgu0s3n6QimUCeaBrBPd2DSckONDpaFLI1BMu6gmRwpORlcs7C7fz0eIk/Aw8FNWAoVH19aKGj9CgSUTIzMnjq4QU3o3dwd70TNqGVeLxXo2IalRVA6cSSDsQLuoJkYuzetcR3l6wnfmbD1A+OIDBXcK5v2sElcoGOR1NCol6wkU9IVL4Ug6f5KWfN/OfdXupVr4UY/pEcku7uroSqpfToElE/isrN4+vE1J5Z+F29qRncmXdiozo3YiYyGoaOJUg2oFwUU+I/Dkbdqfz9sLtzNqwjzJB/gzqFMYD3SOoXl6Xqy5u1BMu6gmRorMq+Qj/+mkTq5KP0LhGeZ4e0ET7KF5MgyYR+YPs3Hymr0rl7YXb2X30FC1qh/BoTEP6Nq+Jn149KPa0A+GinhC5NFv3H+edhduZsXYPgf5+3NGhHg9F19f6GsWIesJFPSFStKy1/LxhHy/9vJnkQyfp1rAqzwxoQvNaFZyOJmfQoElEzik7N5/v1+zm3bgdJB08QYNqZXkkpiHXXlmLQH8/p+NJIdEOhIt6QuTyJB08wbux2/l29W6MgZvb1uXh6AbUq1LG6WhymdQTLuoJEWdk5+YzdUUyr8/fRvqpHG5qU4cxV0XqBQ0vokGTiFxQXr7lp/V7eXvhdjbvO07tiqUZFl2fW9rV1WWtiyFf34EwxkwCrgEOWGtbuLdVBr4EwoGdwK3W2iPnexz1hIhnpB45yXtxO/jql1TyrOX6K2vzSI8GNKhWzulocol8vSc8RT0h4qz0Uzm8s3A7Hy/ZiZ8fDOlen4eiG1BOC4Y7ToMmEblo1loWbjnAWwu2s3rXUaqVL8WD3SK4q1OY/qAXI76+A2GMiQIygCkFBk0vA4ettS8ZY54GKllrnzrf46gnRDxr/7FMPohPZOqKZLJy8xnQMpRHYhrolAcf5Os94SnqCRHvkHL4JONmb2HG2j1ULRfEyN6R3N6+LgE6A8MxGjSJyJ9mrWV54mHeid3Oom0HqVA6kMFdwhncJVxXGSoGisMOhDEmHJhZYNC0BYix1u41xoQCsdbaxud7DPWESOE4mJHFxMVJfLYsmeNZufRoXI1HezSkXXhlp6PJRSoOPeEJ6gkR7/JrylH+9Z9NrNx5mIbVy/FM/yb0bFJdC4Y7QIMmEbksv6Yc5Z2F25nz237KBPlzd6cwHuwWQfUQXWXIVxWHHYizDJqOWmsrFvj8EWttpbN83VBgKEC9evXaJicnF01gkRIo/VQOny1PZuLiJA6fyKZDRGUe7dGQqEZVtVPg5YpDT3iC9idEvI+1lrm/7eelWZtJPHiCzvWr8Nerm9Kito6eLUoaNImIRxS8ylCAvx83t63DkO71iaha1ulo8icVhx2ISx00FaSeECkap7LzmPbLLj6IT2RveibNa4XwaA/XlU79daVTr1QcesIT1BMi3isnL58vVu7itXnbOHwimxta1+aJvo2pXVELhheFi+0JndwoIucVWaM8r93emoVPxHBz2zpMX5VKz1djefizVazZdd41l0WKwn73KXO43x9wOI+IuJUO8ue+rhHEje3ByzddwansPB6Zupo+E+L4OiGFnLx8pyOKiIiPCfT3457O4cSOjeHhmAb8Z/1eerwSy0uzNpN+KsfpeOKmQZOIXJSwKmX51w0tWfJUTx6NaciS7Qe54Z2l3Pr+MhZs3k9+fvE6OlJ8xgzgXvfH9wI/OJhFRM4iKMCPW9vXZe7oaN6+sw3BAf6Mnb6OmHGxfLIkiVPZeU5HFBERHxMSHMhT/Zqw8IkYrm4ZyntxO4get5CPFiWSmaNecZpOnRORS5KRlcuXv6QwcVEie9IziaxRjqFRDbi2VS2CAjTD9ka+fkqEMeYLIAaoCuwHngO+B74C6gG7gFustYfP9zjqCRFnWWuJ3ZrGOwu388vOI1QpG8T93SIY1DmMkOBAp+OVaL7eE56inhDxPRt2p/Py7C3Eb02jdsXSjO4TyfWta+tUbQ/TGk0iUiRy8vKZuW4P78clsnnfcWqGBPNAtwhu71CX8tph8CragXBRT4h4j5VJriudxm5Jo3ypAO7qFMZ9XcOpoQtPOEI94aKeEPFdS7Yf5KVZm1m/O50mNcvzVL8mxDSupotReIgGTSJS7whN4AAAHXdJREFUpKy1xG1N4/24RJYlHqJ8cAB3dwrjvi7hulKdl9AOhIt6QsT7bNidzruxO5i1YS/+fobrrqzNkO71aVyzvNPRShT1hIt6QsS35edbftqwl3Gzt5B86CQdIyrzdP8mtK533uvFyEXQoElEHLMu9Sjvxycya/1eAvz8uKF1bYZE1adh9XJORyvRtAPhop4Q8V67Dp1k0pIkvvwlhVM5eURHVmNoVH26NKiiV6OLgHrCRT0hUjzk5OUzbeUuXp+/jYMZ2fRvUZMn+jamQTXtk1wqDZpExHHJh07w0aIkvkpIISs3n95Nq3N/twg619cOgxO0A+GinhDxfkdPZvPZ8mQ+WZrMwYwsmtcKYWhUfQa0DCXQX+sAFhb1hIt6QqR4OZGVy0eLkvggfgeZufnc1r4uI3s10lkXl0CDJhHxGocyspi8LJnPlidz+EQ2zUJDeKBbBAO1cHiR0g6Ei3pCxHdk5uTxw6+7+SA+kR1pJ6hVIZj7u0VwW3utA1gY1BMu6gmR4ulgRhZvLdjO1BXJBPj58UC3CIZG19eFKP4EDZpExOtk5uTx/ZrdTFycxLYDGVQrX4p7OoVxV6cwKpcNcjpesacdCBf1hIjvyc+3xG49wAfxiSxPPEz5UgHc2bEe93WNoGYFvSLtKeoJF/WESPGWfOgEr87Zyoy1e6hUJpDHejbi7k71KBXg73Q0r6dBk4h4LWsti7Yd5KPFScRvTaNUgB83tqnDA93CaVhdC78WFu1AuKgnRHzbutSjfBCfyE/r9+JnDNdeWYsh3evTNDTE6Wg+Tz3hop4QKRk27E7n3z9vZtG2g9SuWJon+kZyXava+PlpiY9z0aBJRHzCtv3HmbQkiW9X7yYrN5/oyGo82D2Cbg2rah0nD9MOhIt6QqR4SDn8v4XDT2bn0b1RVYZG1Vd/XAb1hIt6QqRkWbQtjZdmbWbjnmM0DQ3hyb6NiWlcTV1yFho0iYhPOZSRxdQVu5iyzLXwa+Ma5bm/WzjXXVmb4EAdxuoJ2oFwUU+IFC/pJ3OYujKZj5fsJO14Fk1qlmdoVH2uuULrAP5Z6gkX9YRIyZOfb5m5fi+vzN7CrsMnaR9eibF9m9AhorLT0byKBk0i4pOycvP4ce1eJi5OYtPeY1QpG8RdncIY1CmMauVLOR3Pp2kHwkU9IVI8ZeXm8cOve/gwPpFtBzKoGRLM/d3Cub1DPS30epHUEy7qCZGSKycvny9/SeGN+ds4cDyL6MhqjO3bmBa1KzgdzSto0CQiPs1ay7Idh5i4OIn5mw8Q6G+4umUo93YJp3W9Sk7H80nagXBRT4gUb9ZaYrem8WF8Ikt3HKJcqQDu6FCX+7pGUKtiaafjeTX1hIt6QkQyc/KYsmwn78Tu4OjJHAa0rMnoPo1pWL2c09EcpUGTiBQbiWkZTFmWzPRVqWRk5dKqTgXu7RLO1VeE6uoQf4J2IFzUEyIlx/rUdD5clMh/1u/FANdcEcqQqPo0r6VXps9GPeGinhCR045l5vDRoiQmLkrkVE4eN7Wpw4jejahTqYzT0RyhQZOIFDsZWbl8uzqVyUt3siPtBFXLBXFHh3rc1TFMl7e+CNqBcFFPiJQ8qUdO8vGSnUxbuYsT2Xl0a1iVIVH1iWqkhcMLUk+4qCdE5EyHMrJ4N3YHU5YnY63lro5hPNqjYYlb2sMrB03GmEnANcABa20L97bngSFAmvtuf7HW/uT+3DPAA0Ae8Li1dvaFvoeKQaT4s9ayZPshPlm6k/mb9+NnDP2a1+TeLuG0D6+knYZz0A6Ei3pCpORKP5XD5yt28fGSJA64Fw5/sHt9rm2lhcNBPXGaekJEzmXP0VO8uWAbXyWkEuTvx/3dwhnavQEVypSMtQC9ddAUBWQAU84YNGVYa185477NgC+ADkAtYB4Qaa3NO9/3UDGIlCwph0/y6fJkvvwlhfRTOTQNDWFwlzBdre4stAPhop4QkezcfGasdS0cvmX/cWqElOK+rhHc0aEeFUqXjJ2Fs1FPuKgnRORCkg6eYMLcrcxYu4eQ4AAeim7AfV3DKRMU4HS0QnWxPVGkL91Ya+OBwxd59+uAadbaLGttErAd19BJROS/6lYuw18GNGX5M7146caWWGt56pv1dHpxPi/O2kTK4ZNORxQRES8TFODHzW3r8PPI7ky+vwMNq5fjpVmb6fLifF6Y+RupR9QdIiJybhFVy/LGHa356fHutA+vzLjZW4h6OZbJS3eSlXveY2NKBG85RvgxY8w6Y8wkY8zpy0nVBlIK3CfVve0PjDFDjTEJxpiEtLS0s91FRIq50kH+3N6hHrNGdOfLoZ3o0qAKHy1KInrcQh6c/AsLtxwgP794rUknIiKXxxhDdGQ1pj7YiZnDu9GnWQ0+WbqT6HGxjJi2hg27052OKBfJvR9xwBizocC2ccaYze79jO+MMRWdzCgixU+zWiFMHNyebx7uTINqZXluxkZ6vhLH1wkp5JXgfY8iXwzcGBMOzCxw6lwN4CBggReAUGvt/caYt4Fl1trP3PebCPxkrf3mfI+vQ11F5LQ9R08xdYXrtLqDGdnUrVyaOzrU49Z2dalarmQt3Ac6JeI09YSInM/uo6f4ZEkSX6xMISMrly4NqjAkqj4xkdWK/RqAvtwT51ii4ypggbU21xjzbwBr7VMXeiz1hIhcCmsti7YdZNzsLazfnU79amUZ2TuSa1qG4udXPPrDK0+dOxtr7X5rbZ61Nh/4kP+dHpcK1C1w1zrAnqLOJyK+q1bF0ozt24SlT/firTtbU6diGV7+eQudX5zP8C/WsCLxEMXtypsiInJ5alcszV+vbsbSZ3ryTP8mJKad4L6Pf6Hva/FMW7mLzBydEuGNzrZEh7V2jrU2131zOa79CRGRQmGMISqyGjMe68q7d7UhwM/w+Bdr6Pd6PLPW7y1RZ1d4wxFNodbave6PRwEdrbW3G2OaA5/zv8XA5wONtBi4iFyO7Qcy+HzFLqavSuFYZi6Nqpfjro71uLFtHUKCi/cCsL78SrUnqSdE5M/Izs1n5ro9fBCfyOZ9x6lYJpA7OtRjUKcwalUs7XQ8j/L1njhzP+OMz/0IfHn6bImzfH4oMBSgXr16bZOTkwsxqYiUBPn5lpnr9/LavK0kpp2gWWgIo/tE0qtpdZ89QtZbrzr3BRADVAX2A8+5b1+J69S5ncBDBQZPfwXuB3KBkdbaWRf6HtqBEJGLcSo7jx/X7WHqil2sTTlK6UB/rm1Vi7s7hdGyTgWn4xUKX9+B8BT1hIhcCmstK5IO88mSncz5bR/GGPo2r8HgLhG0D6/kszsNBfl6T5xr0OTep2gH3GgvYudHPSEinpSb57rS6evzt5F86CSt6lRgVJ9Ion3wlGyvHDQVBRWDiPxZ61PTmboimR9+3cOpnDxa1anAXR3DGNiqFqWD/J2O5zG+vgPhKeoJEblcqUdO8unyZKatTCH9VA7NQkMY3DWca1vVIjjQd3vD13vibIMmY8y9wDCgl7X2oi4nqJ4QkcKQk5fPt6tTeWP+dnYfPUXbsEqM7hNJlwZVfGbgpEGTiMifdCwzh+9W7+az5clsO5BB+eAAbmxdm9s71KNpaIjT8S6br+9AeIp6QkQ85VR2Ht+t2c0nS5PYuj+DymWDuLNDPe7uFEbNCsFOx/vTfL0nzrJERz9gPBBtrb3oS1OrJ0SkMGXn5vNVQgpvLdjOvmOZdIiozJg+kXSsX8XpaBekQZOIyCWy1vLLziN8tjyZnzfsIzsvn1Z1K3J7+7oMbFWLcqUCnI54SXx9B8JT1BMi4mnWWpbtOMTHS3cyb9N+/I2hX4ua3Nc1nDb1fOe0Ol/uiXMs0fEMUAo45L7bcmvtsAs9lnpCRIpCZk4e01bu4u3YHaQdz6Jbw6qM6hNJ27BKTkc7Jw2aREQ84MiJbL5bs5tpv+xi6/4MygT5M/CKWtzeoS5X1q3oMzsP4Ns7EJ6knhCRwrTr0Ek+Xb6Tab+kcDwzl5a1KzC4SzjXtAqlVIB3n1annnBRT4hIUcrMyeOz5cm8G7uDQyeyiWlcjdF9IrmiTkWno/2BBk0iIh5krWVNylGmrdzFj2v3cionj8Y1ynN7h7rc0Lo2FcsEOR3xgrQD4aKeEJGicCIrl2/X7OaTJUnsSDtB1XJB3NkxjLs71qN6iHeeVqeecFFPiIgTTmTlMmVZMu/H7+DoyRx6N63BqD6NaF7Ley5UpEGTiEghOZ6Zw49r9/LlL7tYm5pOUIAf/VvU5Lb2delc33sX89MOhIt6QkSKkrWWxdsP8smSnSzYcgB/Y7j6ilAGdwmndT3vOj1CPeGinhARJx3PzOHjJTv5cFEixzNz6d+iJiN6N6JJTefXjNWgSUSkCPy25xjTftnFd2t2czwzl/AqZbi1fV1ubluH6uW96xVr7UC4qCdExCk7D55gyrJkvk5I4XhWLq3qVuT+ruH0bxFKUICf0/HUE27qCRHxBumncpi4KJFJS3aSkZVLv+Y1ebxXI5rVcm7gpEGTiEgRyszJ46f1e5n2Sworkw7j72fo2aQ6N7etQ88m1Qn01w6Et1BPiIjTMrJy+XZ1Kp8s2UniwRNUK1+KuzuGcWfHelQrX8qxXOoJF/WEiHiT9JM5TFySxMeLkzielctVzWrweK9GtKhd9KfUadAkIuKQHWkZfPlLCt+u3s3BjCyqlA3i+ta1ubltHZqGev8rEMWdekJEvEV+vmXR9oN8vCSJ2C1pBPn7cc0VoQzuGu7IIrDqCRf1hIh4o/STOUxaksSkJUkcz8yld9MajOxdtAMnDZpERByWm5dP3NY0pq9KZd6m/eTkWVrUDuGWtnW5tlUtKpUt2gXEi+sOhDFmBDAEMMCH1trXznd/9YSIeKPEtIz/nlZ3IjuPNvUqMrhrBP1b1Cyyo2KLa0/8WeoJEfFm6ady+GTJTiYuTuRYZi69mlRnRO9GRfIChQZNIiJe5PCJbH74dTfTV6Wycc8xgvz96N3MdWpdVKNqBBTBTkRx3IEwxrQApgEdgGzgZ+Bha+22c32NekJEvNnxzBymr0pl8tKd7Dx0khoh/zutrkq5wj2trjj2xKVQT4iILziWmcPkJTv5aHES6ady6NG4GiN6R3Jl3cIbOGnQJCLipX7bc4zpq1L5/tfdHD6RTbXypbixdW1uaVeHhtXLF9r3LY47EMaYW4C+1toH3bf/BmRZa18+19eoJ0TEF+TnW+K2pjFpSRKLth0kKMCPa1vVYnCX8EI7TaI49sSlUE+IiC85npnDlGXJfLgokaMnc4iOrMaI3o1oUwhXNtWgSUTEy2Xn5rNg8wGmr0pl4ZYD5OVbrqxbkZvb1mFgq1pUKB3o0e9XHHcgjDFNgR+AzsApYD6QYK0dfq6vUU+IiK/ZfuA4k5cm883qVE5m59E+vBL3dgmnb3PPnlZXHHviUqgnRMQXZWTlMmXZTj6MT+TIyRy6N6rKyN6NaBtW2WPfQ4MmEREfknY8i+/X7ObrVSls3Z9BUIAffZrW4MY2tYmKrOaRHYniugNhjHkAeBTIAH4DTllrR51xn6HAUIB69eq1TU5OLvKcIiKXK/1UDl8npDBlWTK7DrtOq7urYxi3d6hL9fLBl/34xbUn/iztT4iILzuRlcuny5P5ID6Rwyey6dawKiN6N6J9+OUPnDRoEhHxQdZa1u9O59vVu5mxdg+HT2RTpWwQA1vV4qY2dWhROwRjzCU9dknYgTDG/AtItda+c677qCdExNfl5Vvith5g8tJk4ramEehvGNAylHs6h9OmXkX1xGVST4hIcXAyO5fP3AOngxnZdGlQhcd7NaJT/SqX/JgaNImI+LicvHzitqTx7ZpU5v12gOy8fBpVL8dLN7W8pENgi+sOhDGmurX2gDGmHjAH6GytPXKu+6snRKQ4SUzL4NPlyUxPSOV4Vi4taofw2m2taVi93J9+rOLaE3+WekJEipNT2XlMXZHMe3GJHMzIokN4Zd66q/UlHQl7sT0RcElJRUSk0AX6+9G7WQ16N6tB+skcZq7fw3erd3vk9Ihi5htjTBUgB3j0fEMmEZHipn61cjw3sDlPXNWY79bs5tvVqdSsoJ4QERGX0kH+PNi9Pnd3CmPayl3M+W0/VcoW7lVMNWgSEfEBFcoEclfHMO7qGOZ0FK9jre3udAYREaeVLRXA3Z3CuLuTekJERP4oONCfwV0jGNw1otC/l+cuUyEiIiIiIiIiIiWaBk0iIiIiIiIiIuIRGjSJiIiIiIiIiIhHaNAkIiIiIiIiIiIeoUGTiIiIiIiIiIh4hAZNIiIiIiIiIiLiERo0iYiIiIiIiIiIR2jQJCIiIiIiIiIiHqFBk4iIiIiIiIiIeIQGTSIiIiIiIiIi4hEaNImIiIiIiIiIiEdo0CQiIiIiIiIiIh6hQZOIiIiIiIiIiHiEsdY6ncGjjDFpQPIlfnlV4KAH4xQWX8jpCxlBOT3JFzJCyc4ZZq2t5uHH9DnqCa/hCxlBOT3JFzJCyc6pnkA94UV8ISMopyf5QkYo2TkvqieK3aDpchhjEqy17ZzOcSG+kNMXMoJyepIvZATllMvjKz8XX8jpCxlBOT3JFzKCcsrl8ZWfiy/k9IWMoJye5AsZQTkvhk6dExERERERERERj9CgSUREREREREREPEKDpt/7wOkAF8kXcvpCRlBOT/KFjKCccnl85efiCzl9ISMopyf5QkZQTrk8vvJz8YWcvpARlNOTfCEjKOcFaY0mERERERERERHxCB3RJCIiIiIiIiIiHqFBk5sxpp8xZosxZrsx5mmn8wAYY+oaYxYaYzYZYzYaY0a4tz9vjNltjPnV/TbAC7LuNMasd+dJcG+rbIyZa4zZ5n5fyeGMjQs8Z78aY44ZY0Z6w/NpjJlkjDlgjNlQYNtZnz/j8ob7d3WdMaaNgxnHGWM2u3N8Z4yp6N4ebow5VeA5fa8oMp4n5zl/xsaYZ9zP5RZjTF8HM35ZIN9OY8yv7u2OPZfye+qJy87q1T2hjii0nOoJz2VUT3gxb+wIUE94OJ96onByqic8l9F7esJaW+LfAH9gB1AfCALWAs28IFco0Mb9cXlgK9AMeB54wul8Z2TdCVQ9Y9vLwNPuj58G/u10zjN+5vuAMG94PoEooA2w4ULPHzAAmAUYoBOwwsGMVwEB7o//XSBjeMH7ecFzedafsfvf01qgFBDh/jvg70TGMz7/KvCs08+l3n73M1FPXH5Wn+kJdYRHc6onPJTxjM+rJ7zozVs7wp1NPVF4P3P1hGdyqic8lPGMzzvaEzqiyaUDsN1am2itzQamAdc5nAlr7V5r7Wr3x8eBTUBtZ1P9KdcBk90fTwaudzDLmXoBO6y1yU4HAbDWxgOHz9h8rufvOmCKdVkOVDTGhDqR0Vo7x1qb6765HKhT2Dku5BzP5blcB0yz1mZZa5OA7bj+HhSq82U0xhjgVuCLws4hf4p6onB4a0+oIzyUUz1xadQTPscrOwLUE4VIPeGhnOqJS+PtPaFBk0ttIKXA7VS87A+wMSYcaA2scG96zH144SQnDyEtwAJzjDGrjDFD3dtqWGv3gqvkgOqOpfuj2/n9Pzxvez7h3M+ft/6+3o/r1ZHTIowxa4wxccaY7k6FKuBsP2NvfC67A/uttdsKbPO257Ik8sbfld9RT3iUOqJwqCc8Qz3hfbzx9+QP1BMepZ4oHOoJz3C8JzRocjFn2eY1l+MzxpQDvgFGWmuPAe8CDYArgb24DotzWldrbRugP/CoMSbK6UDnYowJAq4FvnZv8sbn83y87vfVGPNXIBeY6t60F6hnrW0NjAY+N8aEOJWPc/+Mve65BO7g9//j4m3PZUnljb8r/6We8Bx1ROFQT3iUesL7eOPvye+oJzxHPVE41BMe5XhPaNDkkgrULXC7DrDHoSy/Y4wJxFUKU6213wJYa/dba/OstfnAhxTBoXkXYq3d435/APgOV6b9pw/DdL8/4FzC3+kPrLbW7gfvfD7dzvX8edXvqzHmXuAa4C7rPgnYfejoIffHq3CdqxzpVMbz/Iy97bkMAG4Evjy9zdueyxLMq35XClJPeJw6wsPUE56jnvBaXvV7cib1hMepJzxMPeE53tITGjS5/AI0MsZEuCfUtwMzHM50+tzKicAma+34AtsLnkN7A7DhzK8tSsaYssaY8qc/xrWg2wZcz+G97rvdC/zgTMI/+N2E19uezwLO9fzNAO4xLp2A9NOHxRY1Y0w/4CngWmvtyQLbqxlj/N0f1wcaAYlOZHRnONfPeAZwuzGmlDEmAlfOlUWdr4DewGZrberpDd72XJZg6onL4GM9oY7wIPWEx6knvJNXdgSoJwqJesKD1BMe5x09YR1Yxd0b33Ctvr8V13Tvr07ncWfqhuuwu3XAr+63AcCnwHr39hlAqMM56+NaaX8tsPH08wdUAeYD29zvK3vBc1oGOARUKLDN8ecTV1ntBXJwTcUfONfzh+vwzLfdv6vrgXYOZtyO65zk07+f77nve5P7d2EtsBoY6PBzec6fMfBX93O5BejvVEb39k+AYWfc17HnUm9/+LmpJy49p0/0hDqiUHKqJzyU0b1dPeGlb97YEe5c6gnP5lRPeD6nesJDGd3bvaInjPsbi4iIiIiIiIiIXBadOiciIiIiIiIiIh6hQZOIiIiIiIiIiHiEBk0iIiIiIiIiIuIRGjSJiIiIiIiIiIhHaNAkIiIiIiIiIiIeoUGTlFjGmOeNMfYcb3c7kMcaYx4r6u8rIiJnp54QEZHzUU+InF2A0wFEHJYO9DvL9u1FHURERLySekJERM5HPSFyBg2apKTLtdYudzqEiIh4LfWEiIicj3pC5Aw6dU7kHIwx4e7DT+80xnxqjDlujDlgjHnuLPftaYxZYYzJNMbsN8a8Y4wpd8Z9qhhj3jfG7HXfb4sxZuQZD+VvjPmXMSbN/b3eNsaUKvAYFY0xHxlj9rgfY5cx5sNCegpEROQ81BMiInI+6gkpqXREk5R4xpg//Duw1uYWuDkOmAncDEQBzxljDlpr33Z/fTPgZ2AucBNQF3gJqI/7MFpjTGkgFqgO/B3YDDR0vxU0BlgA3A1cAbwIJAMvuz8/HugCjAL2ub9X1KX+t4uIyIWpJ0RE5HzUEyK/Z6y1TmcQcYQx5nngD68muEW43ycBc621VxX4ug+BAUBda22+MWYa0BZoYq3Nc9/nVuBLoIu1dpkx5iHgXaCNtfbXc+SxwCJrbVSBbd8DNa21ndy3NwDvW2vfvNT/bhERuTjqCREROR/1hMjZ6YgmKenSgd5n2b4HqOX++LszPvct8CBQB9gFdACmny4Ft2+AXKAbsAzoCaw5VykUMOeM278B7Qrc/hUYa4zJA+ZZa7de4PFEROTyqCdEROR81BMiZ9AaTVLS5VprE87yll3gPgfO+JrTt0MLvN9f8A7ukjgEVHZvqgLsvYg8R8+4nQ0EF7j9GPA98CywxRizzRhz+0U8roiIXBr1hIiInI96QuQMGjSJXFj1c9zeW+D97+5jjPHHVQaH3ZsO8b8iuWTW2qPW2settTWBVsAKYKr7vG4REXGGekJERM5HPSEligZNIhd2wxm3b8RVBqnu2yuAG9xlUPA+AcBi9+35QGtjzBWeCmWtXQeMxfXvuImnHldERP409YSIiJyPekJKFK3RJCVdgDGm01m2pxT4uLkx5n1c50lHAQ8AI6y1+e7P/xNYA3xvjHkX17nW/wZmW2uXue8zBXgUmONeNHALrgUCI621T19sWGPMYlzneG8ALDAEOAGsvNjHEBGRP0U9ISIi56OeEDmDBk1S0lXAtbjemf4GfOb++EngGlzFkAm8ALx1+o7W2o3GmP7Av3At7HcM+ML9dafvk2mM6YnrMqX/AEKAncA7fzLvMmAwEA7k4Sqk/tba1PN8jYiIXDr1hIiInI96QuQMxlrrdAYRr2SMCcd1OdKB1tqZzqYRERFvo54QEZHzUU9ISaU1mkREREREROT/t2/HNAAAAAzC/LvGBGcrg2wAC6EJAAAAgIXrHAAAAAALiyYAAAAAFkITAAAAAAuhCQAAAICF0AQAAADAQmgCAAAAYCE0AQAAALAIr/9m16YA4poAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a2fcba7e48>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize = (20,6))\n",
    "ax1.plot(mse_losses)\n",
    "ax2.plot(mae_losses)\n",
    "ax3.plot(rmse_losses)\n",
    "ax1.set_title('MSE Loss', fontsize = 15)\n",
    "ax2.set_title('MAE Loss', fontsize = 15)\n",
    "ax3.set_title('RMSE Loss', fontsize = 15)\n",
    "ax1.set_xlabel('Epochs', fontsize = 15)\n",
    "ax2.set_xlabel('Epochs', fontsize = 15)\n",
    "ax3.set_xlabel('Epochs', fontsize = 15)\n",
    "ax1.set_ylabel('Loss', fontsize = 15)\n",
    "ax2.set_ylabel('Loss', fontsize = 15)\n",
    "ax3.set_ylabel('Loss', fontsize = 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "name": "DDA_Ex_5_1b.ipynb",
   "provenance": [
    {
     "file_id": "1M6oQLIaFBx8kEyt2U7m3Kv7oVbudJYGw",
     "timestamp": 1559056094794
    }
   ],
   "version": "0.3.2"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
